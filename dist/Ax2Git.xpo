Exportfile for AOT version 1.0 or later
Formatversion: 1

***Element: DBE

; 
; --------------------------------------------------------------------------------
  ENUMTYPEVERSION 1
  
  ENUMTYPE #GitExportLayers
    PROPERTIES
      Name                #GitExportLayers
      Label               #Export layers
      UseEnumValue        #Yes
      Origin              #{57D381CE-6FFE-473E-A123-A138E999C6A2}
    ENDPROPERTIES
    
    TYPEELEMENTS
      #TopLayer
      PROPERTIES
        Name                #TopLayer
        Label               #Top layer
        EnumValue           #0
      ENDPROPERTIES
      
      #CurrentLayer
      PROPERTIES
        Name                #CurrentLayer
        Label               #Current layer
        EnumValue           #1
      ENDPROPERTIES
      
      #SelectedLayer
      PROPERTIES
        Name                #SelectedLayer
        Label               #Selected layer
        EnumValue           #2
      ENDPROPERTIES
      
      #AllLayers
      PROPERTIES
        Name                #AllLayers
        Label               #Track all layers
        EnumValue           #3
      ENDPROPERTIES
      
    ENDTYPEELEMENTS
  ENDENUMTYPE
  

***Element: DBT

; 
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #SysVersionControlTmpChange
    EnforceFKRelation 0
    PROPERTIES
  ID                  #1983
  Name                #SysVersionControlTmpChange
  Label               #@SYS85911
  FormRef             #SysVersionControlChangesHistory
  ListPageRef         #
  ReportRef           #
  PreviewPartRef      #
  SearchLinkRefType   #Url
  SearchLinkRefName   #
  Table               #SysVersionControlTmpChange
  TitleField1         #ChangeNumber
  TitleField2         #VCSDate
  TableType           #InMemory
  TableContents       #Not specified
  Systemtable         #Yes
  ConfigurationKey    #
  SecurityKey         #
  MaxAccessMode       #Delete
  Visible             #Yes
  AOSAuthorization    #None
  CacheLookup         #None
  CreateRecIdIndex    #No
  SaveDataPerCompany  #No
  SaveDataPerPartition #Yes
  TableGroup          #Main
  PrimaryIndex        #KeyIdx
  ClusterIndex        #KeyIdx
  ReplacementKey      #
  IsLookup            #No
  AnalysisDimensionType #Auto
  AnalysisIdentifier  #
  SingularLabel       #
  ModifiedDateTime    #No
  DEL_modifiedTime    #No
  ModifiedBy          #No
  ModifiedTransactionId #No
  CreatedDateTime     #No
  DEL_createdTime     #No
  CreatedBy           #No
  CreatedTransactionId #No
  OccEnabled          #Yes
  DeveloperDocumentation  #
  EntityRelationshipType  #Entity
  Extends             #
  Abstract            #No
  InstanceRelationType #
  SupportInheritance  #No
  ValidTimeStateFieldType   #None
  CountryRegionCodes  #
  CountryRegionContextField     #
  CreatedBy           #-AOS-
  CreationDate        #16/11/2012
  CreationTime        #15:54:55
  ChangedBy           #-AOS-
  ChangedDate         #16/11/2012
  ChangedTime         #16:32:56
  Origin              #{2C1A07BF-0000-1000-49C6-44EB3BD26A15}
  LegacyId            #1983
ENDPROPERTIES

 
    FIELDS
      FIELD #ChangeNumber
        INT64
        PROPERTIES
          Name                #ChangeNumber
          Table               #SysVersionControlTmpChange
          Origin              #{064A99E8-FD8D-429F-AF18-75A048D23620}
          LegacyId            #7
          ExtendedDataType    #SysVersionControlChangeNumber
        ENDPROPERTIES
        
      FIELD #Comment
        STRING
        PROPERTIES
          Name                #Comment
          Table               #SysVersionControlTmpChange
          Origin              #{0A1D8FFD-80D4-472D-8D3F-F212768D1BC4}
          LegacyId            #2
          ExtendedDataType    #SysVersionControlItemComment
          StringSize          #(Memo)
        ENDPROPERTIES
        
      FIELD #ComputerName
        STRING
        PROPERTIES
          Name                #ComputerName
          Table               #SysVersionControlTmpChange
          Origin              #{D6922AC7-BF8F-42C0-ADBA-3DFA9BF24B4B}
          LegacyId            #6
          ExtendedDataType    #ComputerName
          StringSize          #30
        ENDPROPERTIES
        
      FIELD #ShortComment
        STRING
        PROPERTIES
          Name                #ShortComment
          Table               #SysVersionControlTmpChange
          Origin              #{220431BC-B8F8-405F-BBBC-535FAC858A6B}
          LegacyId            #8
          ExtendedDataType    #SysVersionControlItemShortComment
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #StatusText
        STRING
        PROPERTIES
          Name                #StatusText
          Table               #SysVersionControlTmpChange
          Origin              #{E6337605-6CF5-4E04-86B3-F3F029C77D3A}
          LegacyId            #1
          ExtendedDataType    #SysVersionControlStatusText
        ENDPROPERTIES
        
      FIELD #User
        STRING
        PROPERTIES
          Name                #User
          Table               #SysVersionControlTmpChange
          Origin              #{4F8414FC-722C-465A-8876-98E7CCC53D67}
          LegacyId            #3
          ExtendedDataType    #SysVersionControlUser
          StringSize          #255
        ENDPROPERTIES
        
      FIELD #VCSDate
        DATE
        PROPERTIES
          Name                #VCSDate
          Table               #SysVersionControlTmpChange
          Origin              #{E8E8D715-8679-464B-82C8-A7AB819391DA}
          LegacyId            #4
          ExtendedDataType    #SysVersionControlItemDate
        ENDPROPERTIES
        
      FIELD #VCSTime
        TIME
        PROPERTIES
          Name                #VCSTime
          Label               #@SYS8827
          HelpText            #@SYS98628
          Table               #SysVersionControlTmpChange
          Origin              #{D1ABD163-F772-4A9C-92D7-F13510BCE27F}
          LegacyId            #9
          ExtendedDataType    #TimeOfDay
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #ChangelistHeader
        PROPERTIES
          Name                #ChangelistHeader
          Label               #@SYS2952
        ENDPROPERTIES
        
        GROUPFIELDS
          #ChangeNumber
          #User
          #ComputerName
          #VCSDate
          #VCSTime
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ChangesHistoryGrid
        PROPERTIES
          Name                #ChangesHistoryGrid
          Label               #@SYS9039
        ENDPROPERTIES
        
        GROUPFIELDS
          #ChangeNumber
          #StatusText
          #VCSDate
          #VCSTime
          #User
          #ShortComment
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Comment
        PROPERTIES
          Name                #Comment
          Label               #@SYS7576
        ENDPROPERTIES
        
        GROUPFIELDS
          #Comment
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ModifiedBy
        PROPERTIES
          Name                #ModifiedBy
          Label               #@SYS75729
        ENDPROPERTIES
        
        GROUPFIELDS
          #User
          #ComputerName
          #VCSDate
          #VCSTime
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #KeyIdx
      PROPERTIES
        Name                #KeyIdx
        AllowDuplicates     #No
        Origin              #{2B060001-07BF-1000-4B65-794964780000}
        LegacyId            #1
      ENDPROPERTIES
      
      INDEXFIELDS
        #ChangeNumber
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
    ENDREFERENCES
    
    DELETEACTIONS
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #generateShortComment
        #private SysVersionControlItemShortComment generateShortComment()
        #{
        #    return strrem(this.Comment, '\n\r');
        #}
      ENDSOURCE
      SOURCE #insert
        #public void insert()
        #{
        #    this.ShortComment = this.generateShortComment();
        #    super();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: DBT

; 
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #SysVersionControlTmpItem
    EnforceFKRelation 0
    PROPERTIES
  ID                  #1984
  Name                #SysVersionControlTmpItem
  Label               #@SYS85910
  FormRef             #sysversionControlitemHistory
  ListPageRef         #
  ReportRef           #
  PreviewPartRef      #
  SearchLinkRefType   #Url
  SearchLinkRefName   #
  Table               #SysVersionControlTmpItem
  TitleField1         #Version
  TitleField2         #ItemPath
  TableType           #InMemory
  TableContents       #Not specified
  Systemtable         #Yes
  ConfigurationKey    #
  SecurityKey         #
  MaxAccessMode       #Delete
  Visible             #Yes
  AOSAuthorization    #None
  CacheLookup         #None
  CreateRecIdIndex    #No
  SaveDataPerCompany  #No
  SaveDataPerPartition #Yes
  TableGroup          #Main
  PrimaryIndex        #
  ClusterIndex        #
  ReplacementKey      #
  IsLookup            #No
  AnalysisDimensionType #Auto
  AnalysisIdentifier  #
  SingularLabel       #
  ModifiedDateTime    #No
  DEL_modifiedTime    #No
  ModifiedBy          #No
  ModifiedTransactionId #No
  CreatedDateTime     #No
  DEL_createdTime     #No
  CreatedBy           #No
  CreatedTransactionId #No
  OccEnabled          #Yes
  DeveloperDocumentation  #
  EntityRelationshipType  #Entity
  Extends             #
  Abstract            #No
  InstanceRelationType #
  SupportInheritance  #No
  ValidTimeStateFieldType   #None
  CountryRegionCodes  #
  CountryRegionContextField     #
  CreatedBy           #-AOS-
  CreationDate        #16/11/2012
  CreationTime        #15:54:56
  ChangedBy           #-AOS-
  ChangedDate         #16/11/2012
  ChangedTime         #16:32:57
  Origin              #{2C1807C0-0000-1000-6C63-C7DBDD00AD98}
  LegacyId            #1984
ENDPROPERTIES

 
    FIELDS
      FIELD #ActionText
        STRING
        PROPERTIES
          Name                #ActionText
          Table               #SysVersionControlTmpItem
          Origin              #{D1B46432-5D2F-46E6-B2FE-BA98E6994BBC}
          LegacyId            #9
          ExtendedDataType    #SysVersionControlActionText
          StringSize          #200
        ENDPROPERTIES
        
      FIELD #ChangeNumber
        INT64
        PROPERTIES
          Name                #ChangeNumber
          Table               #SysVersionControlTmpItem
          Origin              #{BDE266FA-5CFB-4FCB-B973-BD17D2058F20}
          LegacyId            #10
          ExtendedDataType    #SysVersionControlChangeNumber
        ENDPROPERTIES
        
      FIELD #Comment
        STRING
        PROPERTIES
          Name                #Comment
          Table               #SysVersionControlTmpItem
          Origin              #{05D8BDEA-DAF8-44E4-8061-DD0A80EE6D9E}
          LegacyId            #2
          ExtendedDataType    #SysVersionControlItemComment
          StringSize          #(Memo)
        ENDPROPERTIES
        
      FIELD #ComputerName
        STRING
        PROPERTIES
          Name                #ComputerName
          Table               #SysVersionControlTmpItem
          Origin              #{D7DD9959-A705-4A6E-B333-484EB21BFCCB}
          LegacyId            #8
          ExtendedDataType    #ComputerName
          StringSize          #30
        ENDPROPERTIES
        
      FIELD #Filename
        STRING
        PROPERTIES
          Name                #Filename
          Table               #SysVersionControlTmpItem
          Origin              #{EDD71E76-68C2-4AB6-AB5F-C848C54C9B17}
          LegacyId            #4
          ExtendedDataType    #Filename
          StringSize          #259
        ENDPROPERTIES
        
      FIELD #ImageRes
        INT
        PROPERTIES
          Name                #ImageRes
          Table               #SysVersionControlTmpItem
          Origin              #{C2F03D5C-4758-4EFE-BF53-CC4CED41FBBB}
          LegacyId            #12
          ExtendedDataType    #ImageRes
        ENDPROPERTIES
        
      FIELD #InternalFilename
        STRING
        PROPERTIES
          Name                #InternalFilename
          Visible             #No
          Table               #SysVersionControlTmpItem
          Origin              #{0ED7BE2A-1349-4674-B981-8A3B5E16B926}
          LegacyId            #11
          ExtendedDataType    #Filename
          StringSize          #259
        ENDPROPERTIES
        
      FIELD #ItemPath
        STRING
        PROPERTIES
          Name                #ItemPath
          Table               #SysVersionControlTmpItem
          Origin              #{0E5E74D4-6D53-4356-B608-334E10683826}
          LegacyId            #1
          ExtendedDataType    #SysVersionControlItemPath
          StringSize          #400
        ENDPROPERTIES
        
      FIELD #Label
        STRING
        PROPERTIES
          Name                #Label
          Table               #SysVersionControlTmpItem
          Origin              #{68A5E31D-BAAB-49D7-92C5-A9D490D04E3E}
          LegacyId            #16
          ExtendedDataType    #SysVersionControlLabel
          StringSize          #31
        ENDPROPERTIES
        
      FIELD #Selected
        ENUM
        PROPERTIES
          Name                #Selected
          Label               #@SYS28109
          HelpText            #@SYS111700
          Table               #SysVersionControlTmpItem
          Origin              #{0F364A2F-B79D-4E08-8BC0-F16716CAB447}
          LegacyId            #7
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ShortComment
        STRING
        PROPERTIES
          Name                #ShortComment
          Table               #SysVersionControlTmpItem
          Origin              #{01DD3A48-FA63-4D3D-B0A5-CFB5AA2C1C59}
          LegacyId            #14
          ExtendedDataType    #SysVersionControlItemShortComment
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #StatusText
        STRING
        PROPERTIES
          Name                #StatusText
          Table               #SysVersionControlTmpItem
          Origin              #{F6A94DBC-EEE9-43CF-9AC9-A62B7A9DD366}
          LegacyId            #13
          ExtendedDataType    #SysVersionControlStatusText
        ENDPROPERTIES
        
      FIELD #User
        STRING
        PROPERTIES
          Name                #User
          Table               #SysVersionControlTmpItem
          Origin              #{FD8D0EC7-E01E-4229-876A-F8395059FED1}
          LegacyId            #3
          ExtendedDataType    #Name
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #VCSDate
        DATE
        PROPERTIES
          Name                #VCSDate
          Table               #SysVersionControlTmpItem
          Origin              #{8F3DD330-D10D-4C5A-A0EA-8392F78F3F41}
          LegacyId            #6
          ExtendedDataType    #SysVersionControlItemDate
        ENDPROPERTIES
        
      FIELD #VCSTime
        TIME
        PROPERTIES
          Name                #VCSTime
          Label               #@SYS8758
          Table               #SysVersionControlTmpItem
          Origin              #{70028030-BDB5-453D-BF5E-C66DED7C244C}
          LegacyId            #15
          ExtendedDataType    #TimeOfDay
        ENDPROPERTIES
        
      FIELD #Version
        INT
        PROPERTIES
          Name                #Version
          Table               #SysVersionControlTmpItem
          Origin              #{C743EFD9-605A-4B2A-AD3F-8EB296A54D61}
          LegacyId            #5
          ExtendedDataType    #SysVersionControlItemVersion
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #ChangelistGrid
        PROPERTIES
          Name                #ChangelistGrid
          Label               #@SYS9039
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemPath
          #Version
          #ActionText
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ChangelistHeader
        PROPERTIES
          Name                #ChangelistHeader
          Label               #@SYS2952
        ENDPROPERTIES
        
        GROUPFIELDS
          #ChangeNumber
          #User
          #ComputerName
          #VCSDate
          #VCSTime
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Comment
        PROPERTIES
          Name                #Comment
          Label               #@SYS7576
        ENDPROPERTIES
        
        GROUPFIELDS
          #Comment
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Identification
        PROPERTIES
          Name                #Identification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemPath
          #Filename
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ModifiedBy
        PROPERTIES
          Name                #ModifiedBy
          Label               #@SYS75729
        ENDPROPERTIES
        
        GROUPFIELDS
          #User
          #ComputerName
          #VCSDate
          #VCSTime
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Overview
        PROPERTIES
          Name                #Overview
          Label               #@SYS9039
        ENDPROPERTIES
        
        GROUPFIELDS
          #Version
          #ActionText
          #VCSDate
          #VCSTime
          #User
          #ChangeNumber
          #itemPathUsingObjectName
          #ShortComment
          #Label
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #DateIdx
      PROPERTIES
        Name                #DateIdx
        Origin              #{2B070001-07C0-1000-4461-746549647800}
        LegacyId            #1
      ENDPROPERTIES
      
      INDEXFIELDS
        #VCSDate
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
    ENDREFERENCES
    
    DELETEACTIONS
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #fileName
        #public FilenameOpen fileName()
        #{
        #    if (!this.Filename)
        #    {
        #        this.Filename = versioncontrol.getItemVersion(this.getControllable(), this);
        #        if (!this.Filename)
        #        {
        #            //
        #            // The file could not be retrieved, e.g. in case of a deletion.
        #            //
        #            throw error("@SYS86327");
        #        }
        #    }
        #    return this.Filename;
        #}
      ENDSOURCE
      SOURCE #generateShortComment
        #private SysVersionControlItemShortComment generateShortComment()
        #{
        #    return strRem(this.Comment, '\n\r');
        #}
      ENDSOURCE
      SOURCE #getComparable
        #public SysComparable getComparable()
        #{
        #    #SysVersionControl
        #    #AOT
        #
        #    if (match(#LabelMatch, this.ItemPath))
        #    {
        #        return SysLabelFile::newVCSItem(this);
        #    }
        #
        #    if (match(#DefFileMatch, this.ItemPath))
        #    {
        #        return SysVersionControlDefFile::newVCSItem(this);
        #    }
        #
        #    if (match(#VSProjectPathMatch, this.ItemPath))
        #    {
        #        return SysTreeNodeVirtualVCS::newVCSItem(this);
        #    }
        #
        #    if (this.ItemPath && SysVersionControlTmpItem::isValidXPOFile(this.InternalFilename))
        #    {
        #        return SysTreeNodeVirtualVCS::newVCSItem(this);
        #    }
        #
        #
        #    return SysVersionControlFile::newVCSItem(this);
        #}
      ENDSOURCE
      SOURCE #getControllable
        #/// <summary>
        #/// Constructs a <c>SysVersionControllable</c> object.
        #/// </summary>
        #/// <param name="_forceVirtualDeletedForDeleteOperation">
        #/// A Boolean value that indicates whether to always use a <c>SysTreeNodeVirtualDeleted</c> instance
        #/// when the file is opened for delete.
        #/// </param>
        #/// <returns>
        #/// An instance of a class that implements the <c>SysVersionControllable</c> interface.
        #/// </returns>
        #/// <remarks>
        #/// If the caller expects a <c>SysTreeNodeVirtualDeleted</c> object in case of delete, use true for the
        #/// value of the <paramref name="_forceVirtualDeletedForDeleteOperation" /> parameter.Otherwise, this
        #/// method will return a non-virtual object when the delete object actually exists in the AOT. This can
        #/// occur, for example, when the delete operation was a result of moving an object to a different model.
        #/// </remarks>
        #public SysVersionControllable getControllable(boolean _forceVirtualDeletedForDeleteOperation = false)
        #{
        #    SysVersionControllable      controllable;
        #    boolean                     forceVirtualDeleted;
        #
        #    forceVirtualDeleted = _forceVirtualDeletedForDeleteOperation && versioncontrol.parmSysVersionControlSystem().isTmpItemOpenedForDelete(this);
        #
        #    controllable = SysVersionControlTmpItem::newControllable(this.itemPathUsingObjectName(), this.InternalFilename, !forceVirtualDeleted);
        #
        #    if (!controllable)
        #    {
        #        controllable = SysVersionControlFile::newVCSItem(this);
        #    }
        #    return controllable;
        #}
      ENDSOURCE
      SOURCE #getVirtualTreenode
        #public TreeNode getVirtualTreenode(Filename _filename = this.fileName())
        #{
        #    #AOT
        #    #AotExport
        #    #File
        #
        #    TmpAotImport        tmpImportAot;
        #    SysImportElements   sysImportElements = new SysImportElements();
        #
        #    TreeNode  treeNodeImport  = null;
        #    int       exportId;
        #    int       flag            = (#impGetCompareNode + #impKeepIds);
        #    str       name;
        #    str       extension;
        #
        #    extension = System.IO.Path::GetExtension(_filename);
        #
        #    if (match(#vsProjFileExtMatch, extension))
        #    {
        #        return SysTreeNodeVSProject::getVirtualProject(_filename);
        #    }
        #
        #    // Set the filename.
        #    sysImportElements.newFile(_filename);
        #
        #    // Get info from the file
        #    tmpImportAot = sysImportElements.getTmpImportAot();
        #
        #    // Create an import context
        #    exportId     = infolog.startImport(_filename, flag);
        #
        #    // Get the right name - for doc nodes it is the path excl the first part
        #    switch (tmpImportAot.UtilFileType)
        #    {
        #        case UtilFileType::Application:
        #            name = tmpImportAot.TreeNodeName;
        #            break;
        #        case UtilFileType::KernelHelp:
        #            name = strDel(tmpImportAot.TreeNodePath, 1, strLen(#SystemDocPath));
        #            break;
        #        default:
        #            name = tmpImportAot.TreeNodeName;
        #            break;
        #    }
        #
        #    // Import the node in memory
        #    treeNodeImport  = infolog.getImportedNode(
        #        exportId,
        #        tmpImportAot.UtilFileType,
        #        tmpImportAot.UtilElementType,
        #        name,
        #        tmpImportAot.FilePos,
        #        flag);
        #
        #    // Close the import context
        #    infolog.endImport(exportId, 1);
        #
        #    return treeNodeImport;
        #}
      ENDSOURCE
      SOURCE #insert
        #public void insert()
        #{
        #    this.ShortComment = this.generateShortComment();
        #    super();
        #}
      ENDSOURCE
      SOURCE #itemPathUsingObjectName
        #// BP deviation documented
        #display SysVersionControlItemPath itemPathUsingObjectName()
        #{
        #    int len = strLen(this.ItemPath);
        #    int i = strScan(this.ItemPath, '\\', len, -len);
        #
        #    return subStr(this.ItemPath,1,i)+this.objectName();
        #}
      ENDSOURCE
      SOURCE #objectName
        #// BP deviation documented
        #display IdentifierName objectName()
        #{
        #    #file
        #
        #    int len = strLen(this.InternalFilename);
        #    int i = strScan(this.InternalFilename, '\\', len, -len);
        #    int j = strScan(this.InternalFilename, #xpo, 1 , len);
        #    if (!j)
        #        j = strScan(this.InternalFilename, #ald, 1 , len);
        #    if (!j)
        #        j = strScan(this.InternalFilename, #xml, 1 , len);
        #    if (!i)
        #        i = strScan(this.InternalFilename, '/', len, -len);
        #
        #    // If the name does not contain well known extensions return the whole name
        #    if (!j)
        #        j = len + 1;
        #
        #    if (i && j && i<j)
        #        return subStr(this.InternalFilename, i+1, j-i-1);
        #    return '';
        #}
      ENDSOURCE
      SOURCE #openNewWindow
        #public void openNewWindow()
        #{
        #    TreeNode treeNode = this.getVirtualTreenode();
        #    if (treeNode)
        #        treeNode.AOTnewWindow();
        #}
      ENDSOURCE
      SOURCE #viewFile
        #public void viewFile()
        #{
        #    #WinApi
        #    #define.Command('cmd')
        #    #define.Notepad('/c notepad \%1')
        #
        #;
        #    if (WinAPI::fileExists(this.fileName()))
        #        WinAPI::shellExecute(#Command,strFmt(#Notepad,this.fileName()),'',#ShellExeOpen,#SW_HIDE);
        #    else
        #        error(strFmt("@SYS19312", this.fileName()));
        #}
      ENDSOURCE
      SOURCE #compareContext
        #public static SysCompareContextProvider compareContext(SysVersionControlTmpItem _item1, SysVersionControlTmpItem _item2 = null)
        #{
        #    SysComparable comparable1 = _item1 ? _item1.getComparable() : null;
        #    SysComparable comparable2 = _item2 ? _item2.getComparable() : null;
        #    SysLabelFile  labelFile1, labelFile2;
        #    SysTreeNode   treeNode1, treeNode2;
        #    TreeNode      treeNode;
        #
        #    if (comparable1 is SysLabelFile)
        #    {
        #        labelFile1 = comparable1 as SysLabelFile;
        #        labelFile2 = comparable2 as SysLabelFile;
        #        if (labelFile1)
        #        {
        #            if (!labelFile2)
        #            {
        #                labelFile2 = SysLabelFile::newLanguageModule(labelFile1.parmLanguageId(), labelFile1.parmModuleId());
        #            }
        #            return SysLabelFileCompareContext::newSysLabelFiles(labelFile1, labelFile2);
        #        }
        #    }
        #
        #    if (comparable1 is SysTreeNode)
        #    {
        #        treeNode1 = comparable1 as SysTreeNode;
        #        treeNode2 = comparable2 as SysTreeNode;
        #
        #        if (treeNode1)
        #        {
        #            if (!treeNode2)
        #            {
        #                if (_item2 && _item2.ItemPath)
        #                {
        #                    treeNode  = TreeNode::findNode(_item2.ItemPath);
        #                }
        #                else
        #                {
        #                    treeNode  = TreeNode::findNode(_item1.ItemPath);
        #                }
        #                treeNode2 = SysTreeNode::newTreeNode(treeNode);
        #            }
        #            return SysTreenodeCompareContext::newSysTreeNode(treeNode1, treeNode2);
        #        }
        #    }
        #
        #    if (comparable1 && comparable2)
        #    {
        #        return SysComparableCompareContext::newComparables(comparable1, comparable2);
        #    }
        #
        #    // If the second comparable is null, try to find the node in repository for comparison.
        #    if (comparable1 && !comparable2)
        #    {
        #        treeNode  = TreeNode::findNode(_item1.ItemPath);
        #
        #        if (treeNode)
        #        {
        #            treeNode2 = SysTreeNode::newTreeNode(treeNode);
        #
        #            if (treeNode2)
        #            {
        #                return SysComparableCompareContext::newComparables(comparable1, treeNode2);
        #            }
        #        }
        #    }
        #
        #    return null;
        #}
      ENDSOURCE
      SOURCE #hasSeveralNames
        #public static boolean hasSeveralNames(SysVersionControlTmpItem _item)
        #{
        #    Set set = new Set(Types::String);
        #
        #    while select _item
        #    {
        #        set.add(_item.itemPathUsingObjectName());
        #    }
        #    return set.elements() > 1;
        #}
      ENDSOURCE
      SOURCE #isValidXPOFile
        #static public boolean isValidXPOFile(Filename _filename)
        #{
        #    #File
        #    UtilEntryLevel layer;
        #    int i;
        #    MapEnumerator enum;
        #    Filename filename = _filename;
        #
        #
        #    //
        #    // Is it an xpo file?
        #    //
        #    if (strScan(filename, #xpo, 1, strLen(filename)))
        #    {
        #        // Is it placed in a layer folder?
        #        //
        #        filename = strReplace(filename, '\\', '/');
        #        for (i=0; i<enumCnt(UtilEntryLevel); i++)
        #        {
        #            layer = i;
        #            if (strScan(filename, strFmt('/%1/', layer), 1, strLen(filename)))
        #                return true;
        #        }
        #
        #        //
        #        // Is it part of model
        #        //
        #        if (versioncontrol.parmSysVersionControlSystem() && versioncontrol.parmSysVersionControlSystem().parmModelFolders())
        #        {
        #            enum = versioncontrol.parmSysVersionControlSystem().parmModelFolders().getEnumerator();
        #            while (enum.moveNext())
        #            {
        #                if (strScan(filename, strFmt('/%1/', enum.currentKey()), 1, strLen(filename)))
        #                    return true;
        #            }
        #        }
        #
        #        //
        #        // Is it placed in an additional folder?
        #        //
        #        if (versioncontrol.parmSysVersionControlSystem() && versioncontrol.parmSysVersionControlSystem().parmAdditionalFolders())
        #        {
        #            enum = versioncontrol.parmSysVersionControlSystem().parmAdditionalFolders().getEnumerator();
        #            while (enum.moveNext())
        #            {
        #                if (strScan(filename, strFmt('/%1/', enum.currentKey()), 1, strLen(filename)))
        #                    return true;
        #            }
        #        }
        #    }
        #    return false;
        #}
      ENDSOURCE
      SOURCE #newControllable
        #/// <summary>
        #/// Constructs a new Controllable.
        #/// </summary>
        #/// <param name="_itemPath">
        #/// A <c>SysVersionControlItemPath</c> for the controllable.
        #/// </param>
        #/// <param name="_filename">
        #/// The local file path of the element under version control.
        #/// </param>
        #/// <param name="_useTreeNode">
        #/// A Boolean value that indicates whether a controllable can be created by using a tree node from the
        #/// AOT.
        #/// </param>
        #/// <returns>
        #/// An instance of a class implementing the <c>SysVersionControllable</c> interface when the element is
        #/// supported; otherwise null.
        #/// </returns>
        #/// <remarks>
        #/// Set the value of the <paramref name="_useTreeNode" /> parameter to false to make sure that a
        #/// <c>SysTreeNodeVirtualDeleted</c> object is created for AOT elements.
        #/// </remarks>
        #public static client server SysVersionControllable newControllable(
        #    SysVersionControlItemPath _itemPath,
        #    Filename                  _filename,
        #    boolean                   _useTreeNode = true)
        #{
        #    TreeNode        treeNode;
        #    LanguageId      languageId;
        #    LabelModuleId   labelModuleId;
        #    #SysVersionControl
        #    #AOT
        #
        #    if (_itemPath && _useTreeNode)
        #    {
        #        treeNode = TreeNode::findNode(_itemPath);
        #        if (treeNode)
        #        {
        #            return SysTreeNode::newTreeNode(treeNode);
        #        }
        #    }
        #    //
        #    // _itemPath = "\labels\axsysen-us.ald"
        #    //
        #    if (match(#LabelMatch, _itemPath))
        #    {
        #        [labelModuleId, languageId] = SysLabelFile::splitLabelFileName(_itemPath);
        #        return SysLabelFile::newLanguageModule(languageId, labelModuleId);
        #    }
        #
        #    //
        #    // _itemPath = "\definition\VCSDef.xml"
        #    //
        #    if (match(#DefFileMatch, _itemPath))
        #    {
        #        return SysVersionControlDefFile::newVCSDefFile();
        #    }
        #
        #    //
        #    // _itemPath = "*\Model"
        #    //
        #    if (match(#ModelMatch, _itemPath))
        #    {
        #        return SysVersionControlModelFile::newItemPath(_itemPath);
        #    }
        #
        #    if (match(#VSProjectsPath, _itemPath))
        #    {
        #        return SysTreeNodeVirtualDeleted::newTreeNodePath(_itemPath);
        #    }
        #
        #    if (_itemPath && SysVersionControlTmpItem::isValidXPOFile(_filename))
        #    {
        #        return SysTreeNodeVirtualDeleted::newTreeNodePath(_itemPath);
        #    }
        #    return null;
        #}
      ENDSOURCE
      SOURCE #releaseControllable
        #/// <summary>
        #///    Releases a tree node object from memory if the specified <c>SysVersionControllable</c> object is a
        #///    node of a <c>SysTreeNode</c> class tree.
        #/// </summary>
        #/// <param name="_controllable">
        #///    The specified <c>SysVersionControllable</c> object.
        #/// </param>
        #public static client void releaseControllable(SysVersionControllable _controllable)
        #{
        #    SysTreeNode sysTreeNode;
        #    TreeNode nodeToRelease;
        #
        #    // if the controllable is a treenode, then release it.
        #    sysTreeNode = _controllable as SysTreeNode;
        #    if (sysTreeNode)
        #    {
        #        nodeToRelease = sysTreeNode.parmTreeNode() as TreeNode;
        #        if (nodeToRelease &&
        #            TreeNode::isNodeReferenceValid(nodeToRelease) &&
        #            nodeToRelease.treeNodeType().isConsumingMemory())
        #        {
        #            nodeToRelease.treeNodeRelease();
        #        }
        #    }
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: CLS

; 
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #Git
    PROPERTIES
      Name                #Git
      Origin              #{DC2A41E3-EB15-4FDF-8C2B-5EC1B19E8FCF}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #class Git
        #{
        #    #localmacro.git
        #        @'C:\Program Files (x86)\Git\bin\git.exe'
        #    #endmacro
        #
        #    #localmacro.TortoiseGit
        #        @'C:\Program Files\TortoiseGit\bin\TortoiseGitProc.exe'
        #    #endmacro
        #}
      ENDSOURCE
      SOURCE #checkout
        #public static str checkout(str _repository, str _branch)
        #{
        #    container branches = Git::getBranches(_repository);
        #
        #    if (conFind(branches, _branch))
        #    {
        #        return Git::executeCommand(_repository, 'checkout ' + _branch);
        #    }
        #    else
        #    {
        #        return Git::executeCommand(_repository, strFmt('checkout -b %1 remotes/origin/%1 --',  _branch));
        #    }
        #}
      ENDSOURCE
      SOURCE #commit
        #public static str commit(str _repository, str _message)
        #{
        #    Git::executeCommand(_repository, 'add .');
        #    return Git::executeCommand(_repository, strFmt('commit -a -m "%1"', _message));
        #}
      ENDSOURCE
      SOURCE #commitInteractive
        #public static int commitInteractive(str _repository, str _message)
        #{
        #    #WinAPI
        #
        #    return WinAPI::shellExecute(
        #        #TortoiseGit,
        #        strFmt('/command:commit /path:"%1" /logmsg:"%2"', _repository, _message),
        #        _repository,
        #        #ShellExeOpen,
        #        #SW_SHOWNORMAL,
        #        true);
        #}
      ENDSOURCE
      SOURCE #executeCommand
        #public static str executeCommand(
        #    str     _repository,
        #    str     _command)
        #{
        #    System.Diagnostics.Process              process;
        #    System.Diagnostics.ProcessStartInfo     processStartInfo;
        #    System.Exception                        ex;
        #    System.IO.StreamReader                  streamRead;
        #    int                                     exitCode;
        #    str                                     ret;
        #
        #if (WinAPI::fileExists(_repository + @'\.git\index.lock', false))
        #throw error('index.lock exists - repository operation in progress');
        #    try
        #    {
        #        if (WinAPI::setCurrentDirectory(_repository) != 0)
        #        {
        #            error('Unable to change working directory to '+_repository);
        #            return '';
        #        }
        #
        #        new InteropPermission(InteropKind::ClrInterop).assert();
        #
        #        process = new System.Diagnostics.Process();
        #
        #        processStartInfo = new System.Diagnostics.ProcessStartInfo();
        #        processStartInfo.set_FileName(#git);
        #        processStartInfo.set_Arguments(_command);
        #        processStartInfo.set_UseShellExecute(false);
        #        processStartInfo.set_RedirectStandardOutput(true);
        #        processStartInfo.set_RedirectStandardError(true);
        #        processStartInfo.set_CreateNoWindow(true);
        #
        #        process.set_StartInfo(processStartInfo);
        #        process.Start();
        #        //process.WaitForExit(1000*5);   //TODO: without timeout it hangs when StandardOutput message is larger than 4KB
        #                                        // http://stackoverflow.com/questions/139593/processstartinfo-hanging-on-waitforexit-why
        #
        #        while (!process.get_HasExited())
        #        {
        #            streamRead = process.get_StandardOutput();
        #            ret += streamRead.ReadToEnd();
        #        }
        #
        #        exitCode = CLRInterop::getAnyTypeForObject(process.get_ExitCode());
        #        if (exitCode)
        #        {
        #            streamRead = process.get_StandardError();
        #            /*throw*/ error(streamRead.ReadToEnd());
        #        }
        #        else
        #        {
        #            streamRead = process.get_StandardOutput();
        #            ret += streamRead.ReadToEnd();
        #        }
        #
        #        CodeAccessPermission::revertAssert();
        #
        #    }
        #    catch(Exception::CLRError)
        #    {
        #        // BP Deviation documented
        #        ex = ClrInterop::getLastException();
        #
        #        while (ex != null)
        #        {
        #            error(ex.ToString());
        #
        #            ex = ex.get_InnerException();
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #getBranches
        #public static container getBranches(
        #    str         _repository,
        #    boolean     _withCurrentBranchMark = false)
        #{
        #    #define.separator('\n')
        #
        #    str         branchesStr;
        #    container   branchesCon;
        #    int         i = 1;
        #    int         j;
        #    int         length;
        #    int         separatorLength = strLen(#separator);
        #    str         line;
        #
        #    void add2con(str _line)
        #    {
        #        _line = strLRTrim(_line);
        #        if (_line)
        #        {
        #            if (!_withCurrentBranchMark && subStr(_line, 1, 2) == '* ')
        #                _line = subStr(_line, 3, strLen(_line));                  // remove current branch marker
        #
        #            branchesCon += _line;
        #        }
        #    }
        #
        #    branchesStr = Git::executeCommand(_repository, 'branch');
        #
        #    length = strLen(branchesStr);
        #    if (length)
        #    {
        #        j = strScan(branchesStr, #separator, 1, length);
        #        while (j)
        #        {
        #            line = (subStr(branchesStr, i, j-i));
        #            add2con(line);
        #            i = j + separatorLength;
        #            j = strScan(branchesStr, #separator, i, length);
        #        }
        #        add2con(subStr(branchesStr, i, length-i+1));
        #    }
        #
        #    return branchesCon;
        #}
      ENDSOURCE
      SOURCE #getCurrentBranch
        #public static str getCurrentBranch(str _repository)
        #{
        #    container   branchesCon;
        #    str         branch;
        #    int         i;
        #
        #    branchesCon = Git::getBranches(_repository, true);
        #    for (i = 1; i <= conLen(branchesCon); i++)
        #    {
        #        branch = conPeek(branchesCon, i);
        #        if (subStr(branch, 1, 2) == '* ')
        #            return subStr(branch, 3, strLen(branch));
        #    }
        #
        #    return '';
        #}
      ENDSOURCE
      SOURCE #getLog
        #public static container getLog(
        #    str         _repository,
        #    str         _file,
        #    int         _lines = 10)
        #{
        #    #define.LineSeparator('\n')
        #    #define.FieldSeparator('\t')
        #
        #    str         parmStr;
        #    str         logStr;
        #    container   linesCon;
        #    int         lineNum;
        #
        #    str         commitHash;
        #    str         subject;
        #    container   filesCon;
        #
        #    container   ret;
        #    int         i;
        #    str         line;
        #
        #    // Create command string:
        #    parmStr  = 'log';
        #    parmStr += strFmt(' -n %1', _lines);
        #    parmStr += ' --name-status';
        #    if (_file) parmStr += ' --follow';
        #    parmStr += ' --no-merges';
        #    parmStr += ' --date=iso';
        #    parmStr += strFmt(' --pretty=format:"\%h%1\%s"', #FieldSeparator);
        #    parmStr += ' ' + _file;
        #
        #    // Execute the command:
        #    logStr = Git::executeCommand(_repository, parmStr);
        #
        #    // Parse result:
        #    linesCon = str2con(logStr, #LineSeparator);
        #    for (i=1; i<=conLen(linesCon); i++)
        #    {
        #        lineNum++;
        #        line = conPeek(linesCon, i);
        #
        #        if (!line)
        #        {
        #            lineNum = 0;
        #            ret += [[commitHash, subject, filesCon]];
        #            filesCon = conNull();
        #            continue;
        #        }
        #
        #        if (lineNum == 1)
        #        {
        #            [commitHash, subject] = str2con(line, #FieldSeparator);
        #        }
        #        else if (lineNum > 1)
        #        {
        #            filesCon += [str2con(line, #FieldSeparator)];
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #isClean
        #public static boolean isClean(str _repository)
        #{
        #    str     status;
        #
        #    status =  Git::executeCommand(_repository, 'status');
        #
        #    return strEndsWith(status, 'working directory clean\n');
        #}
      ENDSOURCE
      SOURCE #merge
        #public static str merge(str _repository, str _branch)
        #{
        #    str     ret;
        #
        #    ret = Git::executeCommand(_repository, 'merge ' + _branch);
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #mergeInteractive
        #public static int mergeInteractive(str _repository)
        #{
        #    #WinAPI
        #
        #    return WinAPI::shellExecute(
        #        #TortoiseGit,
        #        strFmt('/command:merge /path:"%1"', _repository),
        #        _repository,
        #        #ShellExeOpen,
        #        #SW_SHOWNORMAL,
        #        true);
        #}
      ENDSOURCE
      SOURCE #resolveInteractive
        #public static int resolveInteractive(str _repository)
        #{
        #    #WinAPI
        #
        #    return WinAPI::shellExecute(
        #        #TortoiseGit,
        #        strFmt('/command:resolve /path:"%1"', _repository),
        #        _repository,
        #        #ShellExeOpen,
        #        #SW_SHOWNORMAL,
        #        true);
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; 
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #GitExport
    PROPERTIES
      Name                #GitExport
      Extends             #RunBase
      Origin              #{A0D4DFFB-BC7C-4CB8-AECC-8C4147577CBA}
    ENDPROPERTIES
    
    METHODS
      SOURCE #buildNodeMap
        #protected void buildNodeMap(TreeNode _treeNode)
        #{
        #    TreeNodeIterator    treeNodeIterator;
        #    TreeNode            childNode;
        #    Set                 layerSet;
        #
        #    if (GitExport::nodeIsExportable(_treeNode, exportLayers))
        #    {
        #        //nodeMap.insert(_treeNode, _treeNode.AOTLayers()); // _treeNode.AOTLayers() does NOT return all layers!
        #        layerSet = GitExport::treeNodeAOTLayers(_treeNode);
        #        nodeMap.insert(_treeNode, layerSet);
        #        layersInUse = Set::union(layersInUse, layerSet);
        #        progress.setText(_treeNode.treeNodePath(), 2);
        #    }
        #    else // Project, group, etc.
        #    {
        #        setPrefix(_treeNode.treeNodeName());
        #
        #        // Traverse the tree recursively:
        #        treeNodeIterator = _treeNode.AOTiterator();
        #        childNode        = treeNodeIterator.next();
        #
        #        while (childNode)
        #        {
        #            this.buildNodeMap(childNode);
        #
        #            childNode.treeNodeRelease();
        #            childNode = null;
        #
        #            childNode = treeNodeIterator.next();
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #canGoBatch
        #public boolean canGoBatch()
        #{
        #    return false;
        #}
      ENDSOURCE
      SOURCE #classDeclaration
        #/*
        #    Export parm TreeNode and/or all sub-nodes to XPO files
        #*/
        #class GitExport extends RunBase
        #{
        #    #AOT
        #    #TreeNodeSysNodeType
        #    #AotExport
        #    #AviFiles
        #
        #    System.Diagnostics.Stopwatch stopWatch; //TODO: overall timer, avg. time per node
        #
        #    TreeNode                rootNode;
        #    FilePath                repoPath;
        #    NoYes                   synchronize;
        #    NoYes                   exportProjDef;
        #    GitExportLayers         exportLayers;
        #    UtilEntryLevel          parmLayer;
        #    NoYes                   checkoutBranch;
        #    str                     branch;
        #    NoYes                   commit;
        #    NoYes                   commitInteractive;
        #    str                     commitMessage;
        #
        #    Set                     layersInUse;
        #    Map                     nodeMap;
        #    MapEnumerator           nodeMapEnumerator;
        #
        #    Object                  dialogFormRun;
        #
        #    int         dummy;
        #    #DEFINE.CurrentVersion(1)
        #    #LOCALMACRO.CurrentList
        #        dummy
        #    #ENDMACRO
        #}
      ENDSOURCE
      SOURCE #dialog
        #protected Object dialog()
        #{
        #    DialogRunbase   dialog = Dialog::newFormnameRunbase(formstr(GitExportDialog), this);
        #
        #    dialog = this.dialogInternal(dialog);
        #
        #    return dialog;
        #}
      ENDSOURCE
      SOURCE #dialogPostRun
        #public void dialogPostRun(DialogRunbase dialog)
        #{
        #    dialogFormRun = dialog.formRun();
        #
        #    super(dialog);
        #}
      ENDSOURCE
      SOURCE #exportAllLayers
        #protected void exportAllLayers()
        #{
        #    UtilEntryLevel  layer;
        #    UtilEntryLevel  layerPrev;
        #    int             foregroundHwnd;
        #
        #    exportLayers = GitExportLayers::SelectedLayer;
        #
        #
        #    progress.setTotal(enumCnt(UtilEntryLevel)+1, 1);
        #
        #    // Iterate through layers
        #    for (layer = 0; layer < enumCnt(UtilEntryLevel); layer++)
        #    {
        #//TODO: verify
        #/*
        #xSession::removeAOC();
        #SysTreeNode::refreshAll();
        #SysFlushDictionary::doFlush();
        #SysFlushAOD::doFlush();
        #xSession::updateAOC();
        #*/
        #        progress.setCount(layer+1, 1);
        #        progress.setText(strFmt('Processing layer: %1', enum2str(layer)), 1);
        #        progress.setCount(0, 2);
        #        progress.setText('', 2);
        #
        #        progress.setTotal(nodeMap.elements(), 2);
        #
        #        Git::checkout(repoPath, enum2str(layer));
        #
        #        //Merge-in changes from the layer below current
        #        if (layer != 0)
        #        {
        #            layerPrev = layer - 1;
        #
        #            Git::merge(repoPath, enum2str(layerPrev));
        #
        #            if (!Git::isClean(repoPath))
        #            {
        #                foregroundHwnd = WinAPI::getForegroundWindow(); // save and then restore active window (progress)
        #
        #                Git::resolveInteractive(repoPath);
        #                Git::mergeInteractive(repoPath);
        #
        #                if (Box::yesNo('Were the conflicts resolved? \nDo you want to proceed?' , DialogButton::Yes) != DialogButton::Yes)
        #                {
        #                    break;
        #                }
        #
        #                if (foregroundHwnd)
        #                {
        #                    WinAPI::enableWindow(foregroundHwnd, true);
        #                    WinAPI::bringWindowToTop(foregroundHwnd);
        #                }
        #            }
        #        }
        #
        #        if (synchronize || layersInUse.in(layer))
        #        {
        #            this.exportMap(layer);
        #        }
        #
        #        if (layer == currentAOLayer())
        #        {
        #            this.exportProjectDefinition(rootNode);
        #        }
        #
        #        progress.setCount(0, 2);
        #        progress.setText('', 2);
        #
        #        if (!Git::isClean(repoPath))
        #        {
        #            foregroundHwnd = WinAPI::getForegroundWindow(); // save and then restore active window (progress)
        #
        #            progress.setText('Commit', 2);
        #            Git::commitInteractive(repoPath, enum2str(layer));
        #
        #            if (Box::yesNo("Do you want to proceed to next layer?", DialogButton::Yes) != DialogButton::Yes)
        #            {
        #                return; //break;
        #            }
        #
        #            if (foregroundHwnd)
        #            {
        #                WinAPI::enableWindow(foregroundHwnd, true);
        #                WinAPI::bringWindowToTop(foregroundHwnd);
        #            }
        #        }
        #    }
        #
        #    // Finally, merge highest layer branch into 'master'
        #    Git::checkout(repoPath, 'master');
        #
        #    layer = enumCnt(UtilEntryLevel) - 1; // Top layer
        #    Git::merge(repoPath, enum2str(layer));
        #}
      ENDSOURCE
      SOURCE #exportMap
        #protected void exportMap(UtilEntryLevel _layer)
        #{
        #    UtilEntryLevel  layer;
        #    TreeNode        treeNode;
        #    TreeNode        treeNodeInLayer;
        #    Set             layerSet;
        #    Counter         cnt;
        #
        #    nodeMapEnumerator.reset();
        #    while (nodeMapEnumerator.moveNext())
        #    {
        #        cnt++;
        #
        #        treeNode = nodeMapEnumerator.currentKey();
        #        layerSet = nodeMapEnumerator.currentValue();
        #
        #        progress.setCount(cnt, 2);
        #        progress.setText(treeNode.treeNodePath(), 2);
        #
        #        if (synchronize)
        #        {
        #            // Force export of objects in every layer, despite if it is modified there or not
        #            // Otherwise change would not be detected in Git in cases when you clear all customizations for node in some layer
        #
        #            // If node is not modified in the requested _layer,
        #            // find any modified layer immediately below it
        #            for (layer = _layer; layer >= -1; layer--) // -1 indicates that nothing was found
        #            {
        #                if (layerSet.in(layer))
        #                    break;
        #            }
        #        }
        #        else
        #        {
        #            layer = _layer;
        #        }
        #
        #        if (layerSet.in(layer))
        #        {
        #            treeNode.AOTrefresh();
        #            treeNode.AOTrestore();
        #            treeNode.AOTsave();
        #
        #            treeNodeInLayer = treeNode.getNodeInLayer(layer);
        #            GitExport::exportNode(treeNodeInLayer, layer, exportLayers, repoPath);
        #            treeNodeInLayer.treeNodeRelease();
        #            treeNodeInLayer = null;
        #        }
        #
        #        treeNode.treeNodeRelease();
        #        treeNode = null;
        #    }
        #}
      ENDSOURCE
      SOURCE #exportProjectDefinition
        #private void exportProjectDefinition(TreeNode _treeNode)
        #{
        #    if (exportProjDef &&
        #        _treeNode &&
        #        GitExport::nodeIsProject(_treeNode))
        #    {
        #        GitExport::exportNode(_treeNode, currentAOLayer(), GitExportLayers::TopLayer, repoPath, #expProjectOnly);
        #    }
        #}
      ENDSOURCE
      SOURCE #getFromDialog
        #public boolean getFromDialog()
        #{
        #    boolean ret;
        #
        #    repoPath            = dialogFormRun.getPath();
        #    exportProjDef       = dialogFormRun.getExportProjDef();
        #    checkoutBranch      = dialogFormRun.getCheckoutBranch();
        #    branch              = dialogFormRun.getBranch();
        #    exportLayers        = dialogFormRun.getExportLayers();
        #    parmLayer           = dialogFormRun.getLayer();
        #    commit              = dialogFormRun.getCommit();
        #    commitInteractive   = dialogFormRun.getCommitInteractive();
        #    commitMessage       = dialogFormRun.getCommitMessage();
        #
        #    ret = super();
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #new
        #public void new()
        #{
        #    super();
        #
        #    layersInUse = new Set(Types::Integer);
        #    nodeMap = new Map(Types::Class, Types::Class); // (treeNode, layersSet)
        #    stopWatch = new System.Diagnostics.Stopwatch();
        #}
      ENDSOURCE
      SOURCE #pack
        #public container pack()
        #{
        #    return [#CurrentVersion, #CurrentList];
        #}
      ENDSOURCE
      SOURCE #parmRootNode
        #public TreeNode parmRootNode(TreeNode _rootNode = rootNode)
        #{
        #    rootNode = _rootNode;
        #
        #    return rootNode;
        #}
      ENDSOURCE
      SOURCE #run
        #void run()
        #{
        #
        #    startLengthyOperation();
        #
        #    this.progressInit(strFmt('Exporting to %1', repoPath), 0, #AviUpdate, 2);
        #
        #    progress.setText('Loading...', 1);
        #
        #    this.buildNodeMap(rootNode);
        #    progress.setCount(1, 1);
        #    if (!nodeMap.elements())
        #    {
        #        return;
        #    }
        #
        #    nodeMapEnumerator = nodeMap.getEnumerator();
        #
        #
        #//info(strFmt('Nodes: %1', nodeMap.elements()));
        #
        #    if (exportLayers == GitExportLayers::AllLayers)
        #    {
        #        this.exportAllLayers();
        #    }
        #    else
        #    {
        #        if (checkoutBranch)
        #        {
        #            Git::checkout(repoPath, branch);
        #        }
        #
        #        if (exportLayers == GitExportLayers::CurrentLayer)
        #            parmLayer = currentAOLayer();
        #
        #        this.exportMap(parmLayer);
        #
        #        this.exportProjectDefinition(rootNode);
        #
        #        if (commit)
        #        {
        #            if (commitInteractive)
        #            {
        #                Git::commitInteractive(repoPath, commitMessage);
        #            }
        #            else
        #            {
        #                Git::commit(repoPath, commitMessage);
        #            }
        #        }
        #    }
        #
        #    rootNode.treeNodeRelease();
        #    rootNode = null;
        #
        #    endLengthyOperation();
        #}
      ENDSOURCE
      SOURCE #unpack
        #public boolean unpack(container packedClass)
        #{
        #    Version version = RunBase::getVersion(packedClass);
        #;
        #    switch (version)
        #    {
        #        case #CurrentVersion:
        #            [version,#CurrentList] = packedClass;
        #            break;
        #        default:
        #            return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #construct
        #public static GitExport construct(str _menuItemName)
        #{
        #    switch (_menuItemName)
        #    {
        #        case menuitemActionStr(GitSysContextMenuExport) :
        #            return new GitExport();
        #
        #        case menuitemActionStr(GitSysContextMenuExportQuery) :
        #            return new GitExport_Query();
        #
        #        default :
        #            throw(error(strFmt("@SYS19306", funcName())));
        #    }
        #}
      ENDSOURCE
      SOURCE #exportNode
        #private static void exportNode(
        #    TreeNode        _treeNode,
        #    UtilEntryLevel  _layer,
        #    GitExportLayers _exportLayers,
        #    FilePath        _repoPath,
        #    int             _exportFlag = #export)
        #{
        #    str     subPath;
        #    str     fullPath;
        #    int     lastSlashPos;
        #//_treeNode.AOTsave();//TODO
        #    if ((_exportLayers == GitExportLayers::SelectedLayer || _exportLayers == GitExportLayers::CurrentLayer) &&
        #        !_treeNode.getNodeInLayer(_layer, false))
        #    {
        #        return;
        #    }
        #
        #    subPath = _treeNode.treeNodePath();
        #    lastSlashPos = strScan(subPath, '\\', strLen(subPath), -strLen(subPath));
        #    subPath = subStr(subPath, 1, lastSlashPos-1);
        #
        #    // Add sub-folder named after the current user to the Private projects folder tree
        #    if (GitExport::nodeIsProject(_treeNode) && strEndsWith(subPath, 'Private'))
        #    {
        #        subPath +=  '\\' + curUserId();
        #    }
        #
        #    if (!GitExport::folderCheckCreate(_repoPath + subPath))
        #        throw error('could not create path ' + _repoPath + subPath);
        #
        #    fullPath = strFmt('%1%2\\%3.xpo', _repoPath, subPath, _treeNode.treeNodeName());
        #//    if (exportLayers == GitExportLayers::SelectedLayer || exportLayers == GitExportLayers::CurrentLayer)
        #//        info(strFmt("%1 (%2)", fullPath, exportLayer));
        #//    else
        #//        info(fullPath);
        #
        #
        #    if (_treeNode.AOTObjectNode())
        #    {
        #        //_treeNode.AOTrefresh();
        #
        #        if (_exportLayers == GitExportLayers::SelectedLayer || _exportLayers == GitExportLayers::CurrentLayer)
        #            _treeNode.getNodeInLayer(_layer, false).treeNodeExport(fullPath, _exportFlag);
        #        else
        #            _treeNode.treeNodeExport(fullPath, _exportFlag);
        #
        #        GitExport::postExport(_treeNode, fullPath);
        #    }
        #
        #    //_treeNode.treeNodeRelease();
        #}
        #
      ENDSOURCE
      SOURCE #folderCheckCreate
        #static boolean folderCheckCreate(FileName  path)
        #/*
        #    Check if folder exists. If not, try creating whole path folder by folder.
        #*/
        #{
        #    str     segment;
        #    int     slash1Pos;
        #    int     slash2Pos;
        #    ;
        #
        #    if (!path)
        #        return false;
        #    if (WinAPI::folderExists(path))
        #        return true;
        #
        #    // add trailing backslash if not present
        #    if (substr(path, strlen(path), 1) != "\\")
        #        path += "\\";
        #
        #    while (segment != path)
        #    {
        #        slash2Pos = strScan(path, '\\', slash1Pos+1, strLen(path));
        #        segment = subStr(path, 1, slash2Pos);
        #        slash1Pos = slash2Pos;
        #
        #        if (!segment)
        #            return false;
        #        if (WinAPI::folderExists(segment))
        #            continue;
        #        else if (WinAPI::createDirectory(segment) == 0)
        #            continue;
        #        else
        #            return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #nodeIsExportable
        #static boolean nodeIsExportable(TreeNode _treeNode, GitExportLayers _exportLayers)
        #{
        #    if (!_treeNode.AOTObjectNode())
        #        return false;
        #
        #    if (GitExport::nodeIsProject(_treeNode))
        #        return false;
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #nodeIsProject
        #static boolean nodeIsProject(TreeNode _treeNode)
        #{
        #    return (_treeNode && _treeNode is ProjectNode);
        #}
      ENDSOURCE
      SOURCE #postExport
        #static void postExport(
        #    TreeNode    _treeNode,
        #    str         _fullPath)
        #{
        #    System.Text.UTF8Encoding    encoding = new System.Text.UTF8Encoding(true, true);
        #    System.IO.StreamReader      streamReader;
        #    System.IO.StreamWriter      streamWriter;
        #    System.String               text;
        #
        #    System.Text.RegularExpressions.RegexOptions regexOptions;
        #
        #    // Read XPO file
        #    streamReader = new System.IO.StreamReader(_fullPath, encoding);
        #    text          = streamReader.ReadToEnd();
        #    streamReader.Close();
        #
        #    // Comment line like this may trigger false changes in XPO files (e.g. when exporting with different language settings):
        #    // "; Microsoft Dynamics AX Job: Job39 unloaded"
        #    // Replace it with "; "
        #    regexOptions = System.Text.RegularExpressions.RegexOptions::Multiline;
        #    text = System.Text.RegularExpressions.Regex::Replace(text, '^; [A-Z].*$\n', '; \r\n', regexOptions);
        #
        #    streamWriter = new System.IO.StreamWriter(_fullPath, false, encoding);
        #    streamWriter.Write(text);
        #    streamWriter.Close();
        #}
      ENDSOURCE
      SOURCE #runProgram
        #static str runProgram(
        #    FileName    _program,
        #    str         _arguments,
        #    boolean     _runAsAdmin         = false,
        #    boolean     _useShellExecute    = false)
        #{
        #    System.Diagnostics.ProcessStartInfo processStartInfo;
        #    System.Diagnostics.Process          process;
        #    System.OperatingSystem              operatingSystem;
        #    System.Version                      operatingSystemVersion;
        #    System.Exception                    ex;
        #    int                                 major;
        #    Boolean                             start;
        #    System.IO.StreamReader              streamRead;
        #    str                                 retStr;
        #    ;
        #
        #    try
        #    {
        #        new InteropPermission(InteropKind::ClrInterop).assert();
        #
        #        processStartInfo    = new System.Diagnostics.ProcessStartInfo(_program, _arguments);
        #        process             = new System.Diagnostics.Process();
        #        processStartInfo.set_UseShellExecute(_useShellExecute);
        #        processStartInfo.set_RedirectStandardOutput(true);
        #        processStartInfo.set_WindowStyle(System.Diagnostics.ProcessWindowStyle::Minimized);
        #        processStartInfo.set_CreateNoWindow(true);
        #        process.set_StartInfo(processStartInfo);
        #
        #        start = process.Start();
        #        process.WaitForExit();
        #
        #        streamRead = process.get_StandardOutput();
        #        retStr = streamRead.ReadToEnd();
        #
        #        CodeAccessPermission::revertAssert();
        #
        #        return retStr;
        #    }
        #    catch(Exception::CLRError)
        #    {
        #        // BP Deviation documented
        #        ex = ClrInterop::getLastException();
        #
        #        while (ex != null)
        #        {
        #            error(ex.ToString());
        #
        #            ex = ex.get_InnerException();
        #        }
        #
        #        throw error(strFmt('Error executing "%1" with arguments "%2"', _program, _arguments));
        #    }
        #}
      ENDSOURCE
      SOURCE #treeNodeAOTLayers
        #public static Set treeNodeAOTLayers(TreeNode _treeNode)
        #{
        #    SysModelLayer       sysModelLayer;
        #    SysModelElement     sysModelElement_Root;
        #    SysModelElement     sysModelElement;
        #    SysModelElementData sysModelElementData;
        #    SysModelElementType sysModelElementType;
        #
        #    TreeNodePath        treeNodePathFull;
        #    TreeNodePath        treeNodePath;
        #    TreeNodeName        treeNodeName;
        #    int                 lastSlashPos;
        #    Set                 ret = new Set(Types::Integer);
        #
        #    treeNodePathFull = _treeNode.treeNodePath();
        #    lastSlashPos = strScan(treeNodePathFull, @'\', strLen(treeNodePathFull), -strLen(treeNodePathFull));
        #    treeNodePath = subStr(treeNodePathFull, 1, lastSlashPos-1);
        #    treeNodeName = subStr(treeNodePathFull, lastSlashPos+1, strLen(treeNodePathFull));
        #
        #    // Maps and Views do not have separate types in SysModelElementType - they are stored as Tables. ?..
        #    if (treeNodePath == @'\Data dictionary\Views' || treeNodePath == @'\Data dictionary\Maps')
        #    {
        #        treeNodePath = @'\Data dictionary\Tables';
        #    }
        #
        #    select firstOnly RecId from sysModelElement_Root
        #        where sysModelElement_Root.Name == treeNodeName
        #           && sysModelElement_Root.RootModelElement == sysModelElement_Root.RecId
        #           && !sysModelElement_Root.ParentId
        #    exists join sysModelElementType
        #        where sysModelElementType.RecId == sysModelElement_Root.ElementType
        #           && sysModelElementType.TreeNodeName == treeNodePath;
        #
        #    while select RecId from sysModelElement
        #        where (!sysModelElement.RootModelElement && sysModelElement.RecId            == sysModelElement_Root.RecId) // the root element itself
        #           || ( sysModelElement.RootModelElement && sysModelElement.RootModelElement == sysModelElement_Root.RecId) // or any sub-element
        #    join Layer from sysModelElementData
        #        where sysModelElementData.ModelElement == sysModelElement.RecId
        #    join sysModelLayer
        #        group by Layer
        #        where sysModelLayer.RecId == sysModelElementData.Layer
        #    {
        #        ret.add(sysModelLayer.Layer);
        #    }
        #
        #    if (!ret.elements())
        #    {
        #        warning(treeNodePathFull + ' - no layers found!');
        #    }
        #
        #    return ret;
        #}
        #/* also works, but waaay too slow..
        #
        #    TreeNode        treeNodeInLayer;
        #    UtilEntryLevel  layer;
        #    Set             ret = new Set(Types::Integer);
        #
        #    for (layer=UtilEntryLevel::sys; layer<=UtilEntryLevel::usp; layer++)
        #    {
        #        treeNodeInLayer = _treeNode.getNodeInLayer(layer);
        #        if (treeNodeInLayer)
        #        {
        #            ret.add(layer);
        #            treeNodeInLayer.treeNodeRelease();
        #            treeNodeInLayer = null;
        #        }
        #    }
        #*/
        #
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; 
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #GitExport_Query
    PROPERTIES
      Name                #GitExport_Query
      Extends             #GitExport
      Origin              #{E56F96EE-0828-49E5-AB04-B147E65664FF}
    ENDPROPERTIES
    
    METHODS
      SOURCE #buildNodeMap
        #protected void buildNodeMap(TreeNode _treeNode)
        #{
        #    SysModelElement         sysModelElement;
        #    //SysModelElementData     sysModelElementData;
        #    TreeNode                treeNode;
        #    Set                     elementIdSet = new Set(Types::Int64);
        #    Set                     layerSet;
        #
        #stopWatch.Reset();
        #stopWatch.Start();
        #    while (queryRun.next())
        #    {
        #        if (queryRun.changed(tableNum(SysModelElement)))
        #        {
        #            sysModelElement = queryRun.get(tableNum(SysModelElement), 1) as SysModelElement;
        #            if (sysModelElement.RootModelElement != sysModelElement.RecId || sysModelElement.ParentId)
        #                continue;
        #
        #        //}
        #        //if (queryRun.changed(tableNum(SysModelElement)))
        #        //{
        #            //sysModelElementData = queryRun.get(tableNum(SysModelElementData)) as SysModelElementData;
        #        //}
        #        //if (queryRun.changed(tableNum(SysModelLayer)))
        #        //{
        #            //sysModelLayer = queryRun.get(tableNum(SysModelLayer)) as SysModelLayer;
        #
        #        //info(strFmt('%1 %2 %3',
        #        //    (select firstOnly Name from SysModelElementType where SysModelElementType.RecId == sysModelElement.ElementType).Name,
        #        //    sysModelElement.Name,
        #        //    sysModelLayer.Layer));
        #
        #            //nodeList.addEnd(TreeNode::findNode(SysTreeNode::modelElement2RootElementPath(sysModelElement)));
        #
        #            treeNode = TreeNode::findNode(SysTreeNode::modelElement2RootElementPath(sysModelElement));
        #            if (treeNode)
        #            {
        #                //nodeList.addEnd(treeNode);
        #                layerSet = GitExport::treeNodeAOTLayers(treeNode);
        #                nodeMap.insert(treeNode, layerSet);
        #                layersInUse = Set::union(layersInUse, layerSet);
        #                progress.setText(treeNode.treeNodePath(), 2);
        #                treeNode.treeNodeRelease();
        #                treeNode = null;
        #            }
        #            else
        #            {
        #                breakpoint;
        #            }
        #
        #        }
        #    }
        #
        #    progress.setText('', 2);
        #    progress.setCount(0, 2);
        #
        #    nodeMapEnumerator = nodeMap.getEnumerator();
        #
        #//stopWatch.Stop();
        #//info(strFmt('Query run Elapsed time: %1', CLRInterop::getAnyTypeForObject(stopWatch.get_ElapsedMilliseconds())));
        #
        #}
      ENDSOURCE
      SOURCE #buildQuery_x
        #private void buildQuery_x()
        #{
        #    /*
        #    Query                   query = new Query();
        #    QueryBuildDataSource    qbdsSysModelElement_Root;
        #    QueryBuildDataSource    qbdsSysModelElementType;
        #    QueryBuildDataSource    qbdsSysModelElement;
        #    QueryBuildDataSource    qbdsSysModelElementData;
        #
        #    QueryBuildRange         qbrSysModelElementParentModelElement;
        #    QueryBuildRange         qbrSysModelElement;
        #    QueryBuildDataSource    qbdsSysModelLayer;
        #
        #    // 1. Model element - root entry
        #    qbdsSysModelElement_Root = query.addDataSource(tableNum(SysModelElement));
        #
        #    qbdsSysModelElement_Root.addRange(fieldNum(SysModelElement, Name));
        #
        #    // Include only top-level elements
        #    qbrSysModelElementParentModelElement = qbdsSysModelElement_Root.addRange(fieldNum(SysModelElement, ParentModelElement));
        #    qbrSysModelElementParentModelElement.value('0');
        #    qbrSysModelElementParentModelElement.status(RangeStatus::Hidden);
        #
        #    // 2. Element type
        #    qbdsSysModelElementType = qbdsSysModelElement_Root.addDataSource(tableNum(SysModelElementType));
        #    qbdsSysModelElementType.addLink(fieldNum(SysModelElement, ElementType), fieldNum(SysModelElementType, RecId));
        #    qbdsSysModelElementType.joinMode(JoinMode::InnerJoin);
        #    qbdsSysModelElementType.fetchMode(QueryFetchMode::One2One);
        #
        #    qbdsSysModelElementType.addRange(fieldNum(SysModelElementType, Name));
        #    qbdsSysModelElementType.addRange(fieldNum(SysModelElementType, TreeNodeName));
        #
        #
        #    // 3. Model element with it's sub-elements
        #    qbdsSysModelElement = qbdsSysModelElement_Root.addDataSource(tableNum(SysModelElement));
        #
        #    qbrSysModelElement = qbdsSysModelElement.addRange(fieldNum(SysModelElement, RecId));
        #    qbrSysModelElement.value(strFmt('(((%1==0) && ()) || (() && ()))'));
        #
        #
        #
        #    qbdsSysModelElementData = qbdsSysModelElement_Root.addDataSource(tableNum(SysModelElementData));
        #    qbdsSysModelElementData.joinMode(JoinMode::InnerJoin);
        #    qbdsSysModelElementData.fetchMode(QueryFetchMode::One2One);
        #    qbdsSysModelElementData.relations(true);
        #
        #
        #    qbdsSysModelLayer = qbds2.addDataSource(tableNum(SysModelLayer));
        #    qbdsSysModelLayer.addLink(fieldNum(SysModelElementData, Layer), fieldNum(SysModelLayer, RecId));
        #    //qbdsSysModelLayer.fetchMode(QueryFetchMode::One2One);
        #    qbdsSysModelLayer.joinMode(JoinMode::ExistsJoin);
        #    //qbdsSysModelLayer.addSortField(fieldNum(SysModelLayer, Layer));
        #
        #    query.dataSourceTable(tableNum(SysModelElement)).addRange(fieldNum(SysModelElement, Name));
        #    query.dataSourceTable(tableNum(SysModelElement)).addRange(fieldNum(SysModelElement, ParentId));
        #    query.dataSourceTable(tableNum(SysModelElement)).addRange(fieldNum(SysModelElement, ElementType));
        #    query.dataSourceTable(tableNum(SysModelElement)).addRange(fieldNum(SysModelElement, AxId));
        #    query.dataSourceTable(tableNum(SysModelElement)).addRange(fieldNum(SysModelElement, RootModelElement));
        #    query.dataSourceTable(tableNum(SysModelLayer)).addRange(fieldNum(SysModelLayer, Layer));
        #
        #
        #
        #    // Exclude projects
        #    queryBuildRange = query.dataSourceTable(tableNum(SysModelElementType)).addRange(fieldNum(SysModelElementType, Name));
        #    queryBuildRange.value(strFmt('%1,%2', SysQuery::valueNot('PrivateProject'), SysQuery::valueNot('SharedProject')));
        #    queryBuildRange.status(RangeStatus::Locked);
        #
        #    query.dataSourceTable(tableNum(SysModelElementData)).addRange(fieldNum(SysModelElementData, Layer));
        #    query.dataSourceTable(tableNum(SysModelElementData)).addRange(fieldNum(SysModelElementData, ModelId));
        #
        #    //
        #    // Allow shared+private projects in repository; but disallow other non-aot utilElements
        #    //
        #    queryBuildRange = query.dataSourceTable(tableNum(SysModelElement)).addRange(fieldNum(SysModelElement,DataAreaId));
        #    queryBuildRange.value(strFmt('((%1!=%2::%3) && (%1!=%2::%4))',fieldStr(SysModelElement,ElementType)
        #                                                                 ,enumStr(UtilElementType)
        #                                                                 ,queryValue(UtilElementType::ClassInternalHeader)
        #                                                                 ,queryValue(UtilElementType::TableInternalHeader)));
        #
        #    queryBuildRange.status(RangeStatus::Hidden);
        #
        #    queryRun = new SysQueryRun(query);
        #    */
        #}
      ENDSOURCE
      SOURCE #classDeclaration
        #class GitExport_Query extends GitExport
        #{
        #    QueryRun                queryRun;
        #}
      ENDSOURCE
      SOURCE #dialogPostRun
        #public void dialogPostRun(DialogRunbase dialog)
        #{
        #    Object  formRun;
        #    ;
        #
        #    if(FormHasMethod(dialog.formRun(),"setQueryRanges"))
        #    {
        #        formRun = dialog.formRun();
        #        formRun.setQueryRanges();
        #    }
        #
        #    super(dialog);
        #}
      ENDSOURCE
      SOURCE #initParmDefault
        #public void initParmDefault()
        #{
        #    this.initQuery();
        #
        #    super();
        #}
      ENDSOURCE
      SOURCE #initQuery
        #private void initQuery()
        #{
        #    Query                   query = new Query();
        #    QueryBuildDataSource    qbdsRoot;
        #    QueryBuildDataSource    qbds1;
        #    QueryBuildDataSource    qbds2;
        #    QueryBuildDataSource    qbds3;
        #    QueryBuildDataSource    qbds4;
        #    QueryBuildRange         queryBuildRange;
        #
        #    // Root element
        #    qbdsRoot = query.addDataSource(tableNum(SysModelElement));
        #    queryBuildRange = qbdsRoot.addRange(fieldNum(SysModelElement, ParentModelElement));
        #    queryBuildRange.value(queryValue(0));
        #    //queryBuildRange.status(RangeStatus::Hidden);
        #
        #    //
        #    qbds1 = qbdsRoot.addDataSource(tableNum(SysModelElement));
        #    qbds1.joinMode(JoinMode::ExistsJoin);
        #    qbds1.addLink(fieldNum(SysModelElement, RecId), fieldNum(SysModelElement, RootModelElement));
        #
        #    qbds2 = qbds1.addDataSource(tableNum(SysModelElementData));
        #    qbds2.joinMode(JoinMode::InnerJoin);
        #    qbds2.fetchMode(QueryFetchMode::One2One);
        #    qbds2.relations(true);
        #
        #    qbds3 = qbds1.addDataSource(tableNum(SysModelElementType));
        #    qbds3.addLink(fieldNum(SysModelElement, ElementType), fieldNum(SysModelElementType, RecId));
        #    qbds3.joinMode(JoinMode::InnerJoin);
        #    qbds3.fetchMode(QueryFetchMode::One2One);
        #
        #    qbds4 = qbds2.addDataSource(tableNum(SysModelLayer));
        #    qbds4.addLink(fieldNum(SysModelElementData, Layer), fieldNum(SysModelLayer, RecId));
        #    //qbds4.fetchMode(QueryFetchMode::One2One);
        #    qbds4.joinMode(JoinMode::ExistsJoin);
        #    //qbds4.addSortField(fieldNum(SysModelLayer, Layer));
        #
        #    query.dataSourceTable(tableNum(SysModelElement)).addRange(fieldNum(SysModelElement, Name));
        #    //query.dataSourceTable(tableNum(SysModelElement)).addRange(fieldNum(SysModelElement, ParentId));
        #    //query.dataSourceTable(tableNum(SysModelElement)).addRange(fieldNum(SysModelElement, ElementType));
        #    //query.dataSourceTable(tableNum(SysModelElement)).addRange(fieldNum(SysModelElement, AxId));
        #    //query.dataSourceTable(tableNum(SysModelElement)).addRange(fieldNum(SysModelElement, RootModelElement));
        #    query.dataSourceTable(tableNum(SysModelLayer)).addRange(fieldNum(SysModelLayer, Layer));
        #    SysQuery::findOrCreateRange(qbds2, fieldNum(SysModelElementData, RecId)).status(RangeStatus::Hidden);
        #
        #    // Include only top-level elements
        #//    queryBuildRange = query.dataSourceTable(tableNum(SysModelElement)).addRange(fieldNum(SysModelElement, ParentModelElement));
        #//    queryBuildRange.value('0');
        #//    queryBuildRange.status(RangeStatus::Hidden);
        #
        #    // TODO: Exclude projects
        #    queryBuildRange = query.dataSourceTable(tableNum(SysModelElementType)).addRange(fieldNum(SysModelElementType, RecId));
        #    queryBuildRange.value(strFmt('%1,%2', SysQuery::valueNot(any2int(UtilElementType::PrivateProject)), SysQuery::valueNot(any2int(UtilElementType::SharedProject))));
        #    queryBuildRange.status(RangeStatus::Hidden);
        #
        #    //query.dataSourceTable(tableNum(SysModelElementData)).addRange(fieldNum(SysModelElementData, Layer));
        #    //query.dataSourceTable(tableNum(SysModelElementData)).addRange(fieldNum(SysModelElementData, ModelId));
        #
        #    //
        #    // Allow shared+private projects in repository; but disallow other non-aot utilElements
        #    //
        #//    queryBuildRange = query.dataSourceTable(tableNum(SysModelElement)).addRange(fieldNum(SysModelElement,DataAreaId));
        #//    queryBuildRange.value(strFmt('((%1!=%2::%3) && (%1!=%2::%4))',fieldStr(SysModelElement,ElementType)
        #//                                                                 ,enumStr(UtilElementType)
        #//                                                                 ,queryValue(UtilElementType::ClassInternalHeader)
        #//                                                                 ,queryValue(UtilElementType::TableInternalHeader)));
        #
        #//    queryBuildRange.status(RangeStatus::Hidden);
        #
        #    queryRun = new SysQueryRun(query);
        #}
      ENDSOURCE
      SOURCE #pack
        #public container pack()
        #{
        #    return [#CurrentVersion, #CurrentList, queryRun.pack()];
        #}
      ENDSOURCE
      SOURCE #queryRun
        #public QueryRun queryRun()
        #{
        #    return queryRun;
        #}
      ENDSOURCE
      SOURCE #report_DEL
        #private void report_DEL()
        #{
        #    TreeNode    treeNode;
        #    Set         set;
        #    SetEnumerator   enumerator;
        #    str         output;
        #    UtilEntryLevel  layer;
        #
        #    nodeMapEnumerator.reset();
        #    while (nodeMapEnumerator.moveNext())
        #    {
        #        treeNode = nodeMapEnumerator.currentKey();
        #        set      = nodeMapEnumerator.currentValue();
        #
        #        output = treeNode.treeNodePath();
        #
        #        enumerator = set.getEnumerator();
        #        while (enumerator.moveNext())
        #        {
        #            layer = enumerator.current();
        #            output += strFmt('|%1', layer);
        #        }
        #        info(output);
        #    }
        #}
      ENDSOURCE
      SOURCE #run
        #public void run()
        #{
        #    /*
        #    #AOT
        #
        #    UtilIdElements          utilIdElementsParent;
        #    SysModelLayer           modelLayer;
        #    SysModelElement         sysModelElement, rootModelElement;
        #
        #    SysModelLayer           sysModelLayer;
        #
        #    List                    nodeList = new List(Types::Class);
        #    ListEnumerator          listEnumerator;
        #
        #    Set                     set;
        #
        #
        #    UtilEntryLevel          layer;
        #
        #    TreeNode                treeNode;
        #    TreeNode                treeNodeLayer;
        #    */
        #    //progress = SysOperationProgress::newMultiBar(2, #AviUpdate, "Git export progress");
        #
        #    this.progressInit(strFmt("Exporting to %1", repoPath), 0, #AviUpdate, 2);
        #
        #    progress.setText('Loading...', 1);
        #    this.buildNodeMap(null);
        #info(strFmt('Nodes: %1', nodeMap.elements()));
        #
        #    this.exportAllLayers();
        #
        #    /*
        #    stopWatch.Reset();
        #    stopWatch.Start();
        #    //listEnumerator = nodeList.getEnumerator();
        #    nodeMapEnumerator = nodeMap.getEnumerator();
        #
        #    for (layer=0; layer<=16/*enumCnt(UtilEntryLevel)-1*/; layer++)
        #    {
        #        setPrefix(strFmt('%1', layer));
        #
        #        //listEnumerator.reset();
        #        //while (listEnumerator.moveNext())
        #        nodeMapEnumerator.reset();
        #        while (nodeMapEnumerator.moveNext())
        #        {
        #            treeNode = nodeMapEnumerator.currentKey();
        #            set      = nodeMapEnumerator.currentValue();
        #
        #if (!treeNode){breakpoint;continue;}
        #            //treeNodeLayer = treeNode.getNodeInLayer(layer);
        #            //if (treeNodeLayer)
        #            //if (treeNode.AOTLayers().in(layer))
        #            if (set.in(layer))
        #            {
        #                //info(strFmt('%1 %2\\%3', layer, treeNodeLayer.treeNodePath(), treeNodeLayer.treeNodeName()));
        #                //treeNodeLayer.treeNodeRelease();
        #                //treeNodeLayer = null;
        #                info(strFmt('%1 %2\\%3', layer, treeNode.treeNodePath(), treeNode.treeNodeName()));
        #            }
        #
        #            //if (layer == enumCnt(UtilEntryLevel)-1) // if processing the last layer
        #            treeNode.treeNodeRelease();
        #            treeNode = null;
        #
        #        }
        #        //info(strFmt('Done %1', layer));
        #    }
        #    stopWatch.Stop();
        #    info(strFmt('Map iterate Elapsed time: %1', CLRInterop::getAnyTypeForObject(stopWatch.get_ElapsedMilliseconds())));
        #    */
        #
        #/*
        #    //TODO: memory does not get released
        #    mapEnumerator.reset();
        #    while (mapEnumerator.moveNext())
        #    {
        #        treeNode = mapEnumerator.currentKey();
        #i = treeNode.usageCount();
        #        nodeMap.remove(mapEnumerator.currentKey());
        #i = treeNode.usageCount();
        #        treeNode.treeNodeRelease();
        #i = treeNode.usageCount();
        #        treeNode = null;
        #        if (!nodeMap.elements())
        #        {
        #            mapEnumerator = null;
        #            break;
        #        }
        #    }
        #    xSession::removeAOC();
        #    SysTreeNode::refreshAll();
        #    SysFlushDictionary::doFlush();
        #    SysFlushAOD::doFlush();
        #    xSession::updateAOC();
        #*/
        #    /*
        #    //nodeMap.empty();
        #    mapEnumerator = null;
        #
        #    listEnumerator = null;
        #    nodeList.empty();
        #    */
        #}
      ENDSOURCE
      SOURCE #showQueryValues
        #public boolean showQueryValues()
        #{
        #    return true;
        #}
      ENDSOURCE
      SOURCE #unpack
        #public boolean unpack(container _packedClass)
        #{
        #    Version         version     = RunBase::getVersion(_packedClass);
        #    PackedQueryRun  packedQueryRun;
        #
        #    switch (version)
        #    {
        #        case #CurrentVersion :
        #            [version, #CurrentList, packedQueryRun] = _packedClass;
        #
        #            if (packedQueryRun)
        #                queryRun = new QueryRun(packedQueryRun);
        #            break;
        #
        #        default :
        #            return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #main
        #public static void main(Args args)
        #{
        #    GitExport_Query export = new GitExport_Query();
        #
        #    if (export.prompt())
        #    {
        #        export.run();
        #    }
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; 
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #GitImport
    PROPERTIES
      Name                #GitImport
      Extends             #RunBase
      Origin              #{BB99648C-2E67-4F8E-8249-2FDC7541901B}
    ENDPROPERTIES
    
    METHODS
      SOURCE #buildNodeSet
        #protected void buildNodeSet(TreeNode _treeNode)
        #{
        #    TreeNodeIterator    treeNodeIterator;
        #    TreeNode            childNode;
        #
        #    if (GitExport::nodeIsExportable(_treeNode, GitExportLayers::TopLayer))
        #    {
        #        nodeSet.add(_treeNode);
        #    }
        #    else // Project, group, etc.
        #    {
        #        setPrefix(_treeNode.treeNodeName());
        #
        #        // Traverse the tree recursively:
        #        treeNodeIterator = _treeNode.AOTiterator();
        #        childNode        = treeNodeIterator.next();
        #
        #        while (childNode)
        #        {
        #            this.buildNodeSet(childNode);
        #
        #            childNode.treeNodeRelease();
        #            childNode = null;
        #
        #            childNode = treeNodeIterator.next();
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #callImportForm
        #private void callImportForm(FileName _fileName)
        #{
        #    Args        args = new Args();
        #    FormRun     formRun;
        #
        #    if (!WinAPI::fileExists(_fileName, false))
        #    {
        #        throw(error(strFmt('File not found: %1', _fileName)));
        #    }
        #
        #    args.caller(this);
        #    args.parm(_fileName);
        #    args.name(formStr(SysImportDialog));
        #
        #    formRun = classFactory.formRunClass(args);
        #
        #    formRun.init();
        #    formRun.run();
        #    formRun.wait();
        #}
      ENDSOURCE
      SOURCE #canGoBatch
        #public boolean canGoBatch()
        #{
        #    return false;
        #}
      ENDSOURCE
      SOURCE #classDeclaration
        #class GitImport extends RunBase
        #{
        #    #AOT
        #    #TreeNodeSysNodeType
        #    #AviFiles
        #
        #    TreeNode                rootNode;
        #    FilePath                repoPath;
        #    str                     branch;
        #
        #    Set                     nodeSet;
        #    SetEnumerator           nodeSetEnumerator;
        #
        #    Object                  dialogFormRun;
        #
        #    int         dummy;
        #    #DEFINE.CurrentVersion(1)
        #    #LOCALMACRO.CurrentList
        #        dummy
        #    #ENDMACRO
        #}
      ENDSOURCE
      SOURCE #dialog
        #protected Object dialog()
        #{
        #    DialogRunbase   dialog = Dialog::newFormnameRunbase(formstr(GitImportDialog), this);
        #
        #    dialog = this.dialogInternal(dialog);
        #
        #    return dialog;
        #}
      ENDSOURCE
      SOURCE #dialogPostRun
        #public void dialogPostRun(DialogRunbase dialog)
        #{
        #    dialogFormRun = dialog.formRun();
        #
        #    super(dialog);
        #}
      ENDSOURCE
      SOURCE #getFromDialog
        #public boolean getFromDialog()
        #{
        #    boolean ret;
        #
        #    repoPath            = dialogFormRun.getPath();
        #    branch              = dialogFormRun.getBranch();
        #
        #    ret = super();
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #importMultipleNodes
        #private void importMultipleNodes()
        #{
        #    #File
        #    #localmacro.CombineXPOs
        #        @'C:\Program Files\Microsoft Dynamics AX\60\ManagementUtilities\CombineXPOs.exe'
        #    #endmacro
        #
        #    TreeNode        treeNode;
        #    FileName        fileName;
        #    //FileName        tempPath = WinAPI::getTempPath();
        #    FileName        combinedFileName;
        #    FileName        listFileName;
        #    TextIo          listFile;
        #    str             combineRet;
        #
        #    listFileName = repoPath + @'\xpo_list.txt';
        #    new FileIOPermission(listFileName, #IO_Write).assert();
        #    listFile = new TextIo(listFileName, #IO_Write);
        #
        #    nodeSetEnumerator = nodeSet.getEnumerator();
        #
        #    while (nodeSetEnumerator.moveNext())
        #    {
        #        treeNode = nodeSetEnumerator.current();
        #
        #        fileName = repoPath + treeNode.treeNodePath() + '.xpo';
        #        if (WinAPI::fileExists(fileName, false))
        #        {
        #            listFile.write(fileName);
        #        }
        #        else
        #        {
        #             warning(strFmt('File not found: %1', fileName));
        #        }
        #
        #        treeNode.treeNodeRelease();
        #        treeNode = null;
        #    }
        #    listFile = null;
        #
        #    combinedFileName = repoPath + @'\COMBINED.xpo';
        #
        #    GitExport::runProgram(
        #        #CombineXPOs,
        #        strFmt('-utf8 -XpoDir "%1" -SpecifiedXpoFile "%2" -CombinedXpoFile "%3"', repoPath, listFileName, combinedFileName));
        #
        #    WinAPI::deleteFile(listFileName);
        #
        #    this.callImportForm(combinedFileName);
        #    WinAPI::deleteFile (combinedFileName);
        #}
      ENDSOURCE
      SOURCE #importSingleNode
        #private void importSingleNode()
        #{
        #    TreeNode        treeNode;
        #
        #    nodeSetEnumerator = nodeSet.getEnumerator();
        #    nodeSetEnumerator.moveNext();
        #    treeNode = nodeSetEnumerator.current();
        #
        #    this.callImportForm(repoPath + treeNode.treeNodePath() + '.xpo');
        #
        #    treeNode.treeNodeRelease();
        #    treeNode = null;
        #}
      ENDSOURCE
      SOURCE #new
        #public void new()
        #{
        #    super();
        #
        #    nodeSet = new Set(Types::Class); // (TreeNode)
        #}
      ENDSOURCE
      SOURCE #pack
        #public container pack()
        #{
        #    return [#CurrentVersion, #CurrentList];
        #}
      ENDSOURCE
      SOURCE #parmRootNode
        #public TreeNode parmRootNode(TreeNode _rootNode = rootNode)
        #{
        #    rootNode = _rootNode;
        #
        #    return rootNode;
        #}
      ENDSOURCE
      SOURCE #run
        #public void run()
        #{
        #    this.buildNodeSet(rootNode);
        #
        #    if (!nodeSet.elements())
        #    {
        #        return;
        #    }
        #
        #    Git::checkout(repoPath, branch);
        #
        #    if (nodeSet.elements() == 1)
        #    {
        #        this.importSingleNode();
        #    }
        #    else if (nodeSet.elements() > 1)
        #    {
        #        this.importMultipleNodes();
        #    }
        #
        #    rootNode.treeNodeRelease();
        #    rootNode = null;
        #}
      ENDSOURCE
      SOURCE #unpack
        #public boolean unpack(container packedClass)
        #{
        #    Version version = RunBase::getVersion(packedClass);
        #;
        #    switch (version)
        #    {
        #        case #CurrentVersion:
        #            [version,#CurrentList] = packedClass;
        #            break;
        #        default:
        #            return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #construct
        #public static GitImport construct(str _menuItemName)
        #{
        #    switch (_menuItemName)
        #    {
        #        case menuitemActionStr(GitSysContextMenuImport) :
        #            return new GitImport();
        #
        #        default :
        #            throw(error(strFmt("@SYS19306", funcName())));
        #    }
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; 
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #GitSysContextMenuExport
    PROPERTIES
      Name                #GitSysContextMenuExport
      Extends             #SysContextMenu
      RunOn               #Client
      Origin              #{A2D1A3A7-06EA-464B-94F1-AD1661738960}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/*
        #    For calling export from context menu.
        #*/
        #class GitSysContextMenuExport extends SysContextMenu
        #{
        #    LastAotSelection    lastAotSelection;
        #}
      ENDSOURCE
      SOURCE #first
        #TreeNode first()
        #{
        #    return lastAotSelection.first();
        #}
      ENDSOURCE
      SOURCE #new
        #void new()
        #{
        #    ;
        #    lastAotSelection = new LastAotSelection();
        #    super();
        #}
      ENDSOURCE
      SOURCE #next
        #TreeNode next()
        #{
        #    return lastAotSelection.next();
        #}
      ENDSOURCE
      SOURCE #run
        #void run(Args args)
        #{
        #    GitExport   gitExport = GitExport::construct(args.menuItemName());
        #
        #    gitExport.parmRootNode(lastAotSelection.first());
        #
        #    if (gitExport.prompt())
        #    {
        #        gitExport.run();
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #selectionCount
        #int selectionCount()
        #{
        #    return lastAotSelection.selectionCount();
        #}
      ENDSOURCE
      SOURCE #main
        #static void main(Args args)
        #{
        #    GitSysContextMenuExport  export = new GitSysContextMenuExport();
        #
        #    export.run(args);
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; 
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #GitSysContextMenuImport
    PROPERTIES
      Name                #GitSysContextMenuImport
      Extends             #SysContextMenu
      RunOn               #Client
      Origin              #{133D1BF9-53E8-4A96-9140-2BB257D5C253}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/*
        #    For calling export from context menu.
        #*/
        #class GitSysContextMenuImport extends SysContextMenu
        #{
        #    LastAotSelection    lastAotSelection;
        #}
      ENDSOURCE
      SOURCE #first
        #TreeNode first()
        #{
        #    return lastAotSelection.first();
        #}
      ENDSOURCE
      SOURCE #new
        #void new()
        #{
        #    lastAotSelection = new LastAotSelection();
        #
        #    super();
        #}
      ENDSOURCE
      SOURCE #next
        #TreeNode next()
        #{
        #    return lastAotSelection.next();
        #}
      ENDSOURCE
      SOURCE #run
        #void run(Args args)
        #{
        #    GitImport   gitImport = GitImport::construct(args.menuItemName());
        #
        #    gitImport.parmRootNode(lastAotSelection.first());
        #
        #    if (gitImport.prompt())
        #    {
        #        gitImport.run();
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #selectionCount
        #int selectionCount()
        #{
        #    return lastAotSelection.selectionCount();
        #}
      ENDSOURCE
      SOURCE #main
        #static void main(Args args)
        #{
        #    GitSysContextMenuImport  import = new GitSysContextMenuImport();
        #
        #    import.run(args);
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: FRM

; 
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #GitExportDialog
  PROPERTIES
    Name                #GitExportDialog
    Origin              #{373D90E1-3667-4309-92DA-A15B787BACA0}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #class FormRun extends ObjectRun
      #{
      #    #define.identifierName('GitLastPaths')
      #
      #    GitExport               gitExport;
      #    FilePath                repositoryPath;
      #    container               lastPaths;
      #    str                     lastPathsStr;
      #    NoYes                   exportProjDef;
      #    GitExportLayers         exportLayers;
      #    UtilEntryLevel          layer;
      #    int                     checkoutBranch;
      #    str                     branch;
      #    int                     commit;
      #    NoYes                   commitInteractive;
      #    str                     commitMessage;
      #
      #    #Define.CurrentVersion(4)
      #    #localmacro.CurrentList
      #        lastPathsStr,
      #        exportProjDef,
      #        exportLayers,
      #        layer,
      #        checkoutBranch,
      #        branch,
      #        commit,
      #        commitInteractive,
      #        commitMessage
      #    #endmacro
      #
      #    #Define.pathsInHistory(5)
      #}
    ENDSOURCE
    SOURCE #closeOk
      #public void closeOk()
      #{
      #    DialogRunbase dialog = element.args().caller();
      #
      #    element.updateBox(repositoryPath, false);
      #
      #    exportProjDef       = ExportProjDefControl.value();
      #    exportLayers        = exportLayersControl.selection();
      #    layer               = layerControl.selection();
      #    checkoutBranch      = checkoutBranchGrp.optionValue();
      #    branch              = branchList.getEditText();
      #    commit              = commitGrp.optionValue();
      #    commitInteractive   = commitInteractiveControl.value();
      #    commitMessage       = commitMessageControl.text();
      #
      #    xSysLastValue::saveLast(element);
      #
      #    dialog.updateServer();
      #    if (gitExport.checkCloseDialog())
      #    {
      #        super();
      #    }
      #}
    ENDSOURCE
    SOURCE #getBranch
      #public str getBranch()
      #{
      #    return branch;
      #}
    ENDSOURCE
    SOURCE #getCheckoutBranch
      #public NoYes getCheckoutBranch()
      #{
      #    return checkoutBranch;
      #}
    ENDSOURCE
    SOURCE #getCommit
      #public NoYes getCommit()
      #{
      #    return commit;
      #}
    ENDSOURCE
    SOURCE #getCommitInteractive
      #public NoYes getCommitInteractive()
      #{
      #    return commitInteractive;
      #}
    ENDSOURCE
    SOURCE #getCommitMessage
      #public str getCommitMessage()
      #{
      #    return commitMessage;
      #}
    ENDSOURCE
    SOURCE #getExportLayers
      #public GitExportLayers getExportLayers()
      #{
      #    return exportLayers;
      #}
    ENDSOURCE
    SOURCE #getExportProjDef
      #public NoYes getExportProjDef()
      #{
      #    return exportProjDef;
      #}
    ENDSOURCE
    SOURCE #getLayer
      #public UtilEntryLevel getLayer()
      #{
      #    return layer;
      #}
    ENDSOURCE
    SOURCE #getPath
      #public str getPath()
      #{
      #    return repositoryPath;
      #}
    ENDSOURCE
    SOURCE #init
      #public void init()
      #{
      #;
      #    if (!element.args().caller())
      #        throw error("@SYS90597");
      #
      #    gitExport =  element.args().caller().runbase();
      #
      #    super();
      #}
    ENDSOURCE
    SOURCE #initParmDefault
      #/*MAN
      #This method is called when no SysLastValue record can be found in xSysLastValue.GetLast()
      #*/
      #void initParmDefault()
      #{
      #
      #}
    ENDSOURCE
    SOURCE #lastValueDataAreaId
      #dataAreaId lastValueDataAreaId()
      #{
      #    return 'DAT';
      #}
    ENDSOURCE
    SOURCE #lastValueDesignName
      #private identifierName lastValueDesignName()
      #{
      #    return '';
      #}
    ENDSOURCE
    SOURCE #lastValueElementName
      #private identifierName lastValueElementName()
      #{
      #    return #identifierName();
      #}
    ENDSOURCE
    SOURCE #lastValueType
      #private UtilElementType lastValueType()
      #{
      #    return UtilElementType::Form;
      #}
    ENDSOURCE
    SOURCE #lastValueUserId
      #private userId lastValueUserId()
      #{
      #    return curuserid();
      #}
    ENDSOURCE
    SOURCE #pack
      #public container pack()
      #{
      #    lastPathsStr = con2Str(lastPaths);
      #
      #    return [#CurrentVersion,#CurrentList];
      #}
    ENDSOURCE
    SOURCE #run
      #public void run()
      #{
      #    xSysLastValue::getLast(element);
      #
      #    element.updateBox();
      #
      #    exportProjDefControl.value(exportProjDef);
      #
      #    exportLayersControl.selection(exportLayers);
      #
      #    layerControl.selection(layer);
      #    layerControl.enabled(exportLayers == GitExportLayers::SelectedLayer);
      #
      #    checkoutBranchGrp.optionValue(checkoutBranch);
      #
      #    if (checkoutBranch)
      #    {
      #        element.updateBranchList();
      #        branchList.selectText(branch);
      #    }
      #
      #    commitGrp.optionValue(commit);
      #
      #    commitInteractiveControl.value(commitInteractive);
      #
      #    commitMessageControl.text(commitMessage);
      #
      #    super();
      #}
    ENDSOURCE
    SOURCE #runBase
      #RunBase runBase()
      #{
      #    return gitExport;
      #}
    ENDSOURCE
    SOURCE #unpack
      #public boolean unpack(container _packedClass)
      #{
      #
      #    Integer     version     = conpeek(_packedClass,1);
      #
      #    switch (version)
      #    {
      #        case #CurrentVersion :
      #            [version, #CurrentList] = _packedClass;
      #
      #            lastPaths = str2con(lastPathsStr);
      #            break;
      #        default :
      #            return false;
      #    }
      #
      #    return true;
      #
      #}
    ENDSOURCE
    SOURCE #updateBox
      #void updateBox(FilePath _path = '', boolean _updateBox = true)
      #{
      #    int         i;
      #
      #    if (_path)
      #    {
      #        while (confind(lastPaths, _path))
      #        {
      #            lastPaths = condel(lastPaths, confind(lastPaths, _path), 1);
      #        }
      #
      #        while (conlen(lastPaths) >= #pathsInHistory)
      #        {
      #            lastPaths = condel(lastPaths, #pathsInHistory, 1);
      #        }
      #        lastPaths = conins(lastPaths, 1, _path);
      #    }
      #
      #    if (_updateBox)
      #    {
      #        filePath.clear();
      #
      #        for (i = 1; i <= conlen(lastPaths); i++)
      #        {
      #            if (i == 1)
      #            {
      #                repositoryPath = conpeek(lastPaths, i);
      #            }
      #
      #            if (conpeek(lastPaths, i))
      #            {
      #                filePath.add(conpeek(lastPaths, i));
      #            }
      #        }
      #
      #        filePath.setDropSize(conlen(lastPaths));
      #        filePath.selection(0);
      #        filePath.update();
      #    }
      #}
    ENDSOURCE
    SOURCE #updateBranchList
      #public void updateBranchList()
      #{
      #    container   branchesCon = Git::getBranches(repositoryPath);
      #    int         i;
      #
      #    if (repositoryPath)
      #    {
      #        branchesCon = Git::getBranches(repositoryPath);
      #    }
      #
      #    branchList.clear();
      #
      #    for (i = 1; i <= conlen(branchesCon); i++)
      #    {
      #        if (conpeek(branchesCon, i))
      #        {
      #            branchList.add(conpeek(branchesCon, i));
      #        }
      #    }
      #
      #    if (repositoryPath)
      #    {
      #        branchList.setEditText(Git::getCurrentBranch(repositoryPath));
      #    }
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Width               #Column width
      Caption             #Export to Git repository
      WindowType          #Workspace
      SaveSize            #No
      SetCompany          #No
      Style               #Dialog
      ViewEditMode        #Edit
    ENDPROPERTIES
    
    CONTAINER
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #BottomButtonGrp
          Left                #Auto (right)
          Top                 #Bottom edge
          ElementPosition     #1431655764
          ArrangeMethod       #Horizontal, flush right
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CheckoutBranchGrp
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1073741822
          HierarchyParent     #GitOptionsGrp
          FrameType           #Edged 3D
          Caption             #Checkout branch
          FrameOptionButton   #Check
          OptionValue         #0
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    super();
            #
            #    if (checkoutBranchGrp.optionValue())
            #    {
            #        element.updateBranchList();
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CommitGrp
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612733
          HierarchyParent     #GitOptionsGrp
          FrameType           #Edged 3D
          Caption             #Commit
          FrameOptionButton   #Check
          OptionValue         #0
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DialogStartGrp
          ElementPosition     #1073741822
          HierarchyParent     #Dialog
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ElementGrp
          Width               #Column width
          ElementPosition     #1503238552
          HierarchyParent     #MainGrp
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #FileGrp
          Width               #Column width
          ElementPosition     #858993458
          HierarchyParent     #MainGrp
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GitOptionsGrp
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612733
          HierarchyParent     #ElementGrp
          FrameType           #Edged 3D
          Caption             #Git options
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LayerGrp
          AutoDeclaration     #Yes
          Width               #Column width
          HelpText            #@SYS69897
          ElementPosition     #1610612733
          HierarchyParent     #OptionGrp
          FrameType           #Edged 3D
          Caption             #@SYS26367
          OptionValue         #0
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #MainGrp
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #Main
          Style               #DialogContent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #OptionGrp
          Width               #Column width
          Height              #Column height
          ElementPosition     #1073741822
          HierarchyParent     #ElementGrp
          FrameType           #Edged 3D
          Caption             #@SYS22622
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RightButtonGrp
          ElementPosition     #1610612733
          HierarchyParent     #Dialog
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #Tab
          ElementPosition     #715827882
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Dialog
          ElementPosition     #1610612733
          HierarchyParent     #Tab
          Caption             #Query options
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Main
          ElementPosition     #1879048189
          HierarchyParent     #Tab
          Caption             #Git options
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #Browse
          Left                #Right edge
          HelpText            #@SYS74496
          ElementPosition     #1610612733
          HierarchyParent     #FileGrp
          Text                #@SYS28927
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    Filename path;
            #
            #    super();
            #
            #    path = WinAPI::browseForPath(element.hWnd()); // simpler, faster, lower level call
            #    //path = WinAPI::browseForFolderDialog(); // CLRInterop - nicer, but slower
            #
            #    element.updateBox(path);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #CheckForDeletedControl
          AutoDeclaration     #Yes
          HelpText            #Check for objects that are present in repository, but missing in AOT and delete them from repository.
          ElementPosition     #1342177277
          HierarchyParent     #OptionGrp
          Label               #Check for deleted objects
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #CommitInteractiveControl
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #CommitGrp
          Label               #Interactive commit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #ExportProjDefControl
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #OptionGrp
          Label               #Export project definition
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #BranchList
          AutoDeclaration     #Yes
          Width               #300
          ElementPosition     #1431655764
          HierarchyParent     #CheckoutBranchGrp
          Label               #Branch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ExportLayersControl
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #LayerGrp
          EnumType            #GitExportLayers
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    layerControl.enabled(exportLayersControl.selection() == GitExportLayers::SelectedLayer);
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #FilePath
          AutoDeclaration     #Yes
          Width               #Column width
          AlignControl        #No
          HelpText            #@SYS124357
          ElementPosition     #1073741822
          HierarchyParent     #FileGrp
          DisplayLength       #50
          Label               #Repository path
          AppendNew           #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    repositoryPath = filePath.getEditText();
            #
            #    element.updateBranchList();
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LayerControl
          AutoDeclaration     #Yes
          HelpText            #@SYS55693
          ElementPosition     #1610612733
          HierarchyParent     #LayerGrp
          Label               #@SYS26367
          EnumType            #UtilEntryLevel
        ENDPROPERTIES
        
        METHODS
          SOURCE #toolTip
            #str toolTip()
            #{
            #    str ret;
            #
            #    ret = "@SYS55693";
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #Cancel
          ElementPosition     #1610612733
          HierarchyParent     #BottomButtonGrp
          Command             #264
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #Export
          ElementPosition     #1073741822
          HierarchyParent     #BottomButtonGrp
          Text                #@SYS5469
          DefaultButton       #Yes
          Command             #263
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CommitMessageControl
          AutoDeclaration     #Yes
          Width               #Column width
          ElementPosition     #1610612733
          HierarchyParent     #CommitGrp
          Label               #Commit message
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FRM

; 
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #GitImportDialog
  PROPERTIES
    Name                #GitImportDialog
    Origin              #{021EFEBB-56B0-48E5-9B08-1103E3FC42ED}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #class FormRun extends ObjectRun
      #{
      #    #define.identifierName('GitLastPaths')
      #
      #    GitExport               gitExport;
      #    FilePath                repositoryPath;
      #    container               lastPaths;
      #    str                     lastPathsStr;
      #    NoYes                   importProjDef;
      #    str                     branch;
      #
      #    #Define.CurrentVersion(4)
      #    #localmacro.CurrentList
      #        lastPathsStr,
      #        importProjDef,
      #        branch
      #    #endmacro
      #
      #    #Define.pathsInHistory(5)
      #}
    ENDSOURCE
    SOURCE #closeOk
      #public void closeOk()
      #{
      #    DialogRunbase dialog = element.args().caller();
      #
      #    element.updateBox(repositoryPath, false);
      #
      #    importProjDef       = ImportProjDefControl.value();
      #    branch              = branchList.getEditText();
      #
      #    xSysLastValue::saveLast(element);
      #
      #    dialog.updateServer();
      #    if (gitExport.checkCloseDialog())
      #    {
      #        super();
      #    }
      #}
    ENDSOURCE
    SOURCE #getBranch
      #public str getBranch()
      #{
      #    return branch;
      #}
    ENDSOURCE
    SOURCE #getImportProjDef
      #public NoYes getImportProjDef()
      #{
      #    return importProjDef;
      #}
    ENDSOURCE
    SOURCE #getPath
      #public str getPath()
      #{
      #    return repositoryPath;
      #}
    ENDSOURCE
    SOURCE #init
      #public void init()
      #{
      #;
      #    if (!element.args().caller())
      #        throw error("@SYS90597");
      #
      #    gitExport =  element.args().caller().runbase();
      #
      #    super();
      #}
    ENDSOURCE
    SOURCE #initParmDefault
      #/*MAN
      #This method is called when no SysLastValue record can be found in xSysLastValue.GetLast()
      #*/
      #void initParmDefault()
      #{
      #
      #}
    ENDSOURCE
    SOURCE #lastValueDataAreaId
      #dataAreaId lastValueDataAreaId()
      #{
      #    return 'DAT';
      #}
    ENDSOURCE
    SOURCE #lastValueDesignName
      #private identifierName lastValueDesignName()
      #{
      #    return '';
      #}
    ENDSOURCE
    SOURCE #lastValueElementName
      #private identifierName lastValueElementName()
      #{
      #    return #identifierName();
      #}
    ENDSOURCE
    SOURCE #lastValueType
      #private UtilElementType lastValueType()
      #{
      #    return UtilElementType::Form;
      #}
    ENDSOURCE
    SOURCE #lastValueUserId
      #private userId lastValueUserId()
      #{
      #    return curuserid();
      #}
    ENDSOURCE
    SOURCE #pack
      #public container pack()
      #{
      #    lastPathsStr = con2Str(lastPaths);
      #
      #    return [#CurrentVersion,#CurrentList];
      #}
    ENDSOURCE
    SOURCE #run
      #public void run()
      #{
      #    xSysLastValue::getLast(element);
      #
      #    element.updateBox();
      #
      #    importProjDefControl.value(importProjDef);
      #
      #    element.updateBranchList();
      #    branchList.selectText(branch);
      #
      #    super();
      #}
    ENDSOURCE
    SOURCE #runBase
      #RunBase runBase()
      #{
      #    return gitExport;
      #}
    ENDSOURCE
    SOURCE #unpack
      #public boolean unpack(container _packedClass)
      #{
      #
      #    Integer     version     = conpeek(_packedClass,1);
      #
      #    switch (version)
      #    {
      #        case #CurrentVersion :
      #            [version, #CurrentList] = _packedClass;
      #
      #            lastPaths = str2con(lastPathsStr);
      #            break;
      #        default :
      #            return false;
      #    }
      #
      #    return true;
      #
      #}
    ENDSOURCE
    SOURCE #updateBox
      #void updateBox(FilePath _path = '', boolean _updateBox = true)
      #{
      #    int         i;
      #
      #    if (_path)
      #    {
      #        while (confind(lastPaths, _path))
      #        {
      #            lastPaths = condel(lastPaths, confind(lastPaths, _path), 1);
      #        }
      #
      #        while (conlen(lastPaths) >= #pathsInHistory)
      #        {
      #            lastPaths = condel(lastPaths, #pathsInHistory, 1);
      #        }
      #        lastPaths = conins(lastPaths, 1, _path);
      #    }
      #
      #    if (_updateBox)
      #    {
      #        filePath.clear();
      #
      #        for (i = 1; i <= conlen(lastPaths); i++)
      #        {
      #            if (i == 1)
      #            {
      #                repositoryPath = conpeek(lastPaths, i);
      #            }
      #
      #            if (conpeek(lastPaths, i))
      #            {
      #                filePath.add(conpeek(lastPaths, i));
      #            }
      #        }
      #
      #        filePath.setDropSize(conlen(lastPaths));
      #        filePath.selection(0);
      #        filePath.update();
      #    }
      #}
    ENDSOURCE
    SOURCE #updateBranchList
      #public void updateBranchList()
      #{
      #    container   branchesCon = Git::getBranches(repositoryPath);
      #    int         i;
      #
      #    if (repositoryPath)
      #    {
      #        branchesCon = Git::getBranches(repositoryPath);
      #    }
      #
      #    branchList.clear();
      #
      #    for (i = 1; i <= conlen(branchesCon); i++)
      #    {
      #        if (conpeek(branchesCon, i))
      #        {
      #            branchList.add(conpeek(branchesCon, i));
      #        }
      #    }
      #
      #    if (repositoryPath)
      #    {
      #        branchList.setEditText(Git::getCurrentBranch(repositoryPath));
      #    }
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Width               #Column width
      Caption             #Export to Git repository
      WindowType          #Workspace
      SaveSize            #No
      SetCompany          #No
      Style               #Dialog
      ViewEditMode        #Edit
    ENDPROPERTIES
    
    CONTAINER
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #BottomButtonGrp
          Left                #Auto (right)
          Top                 #Bottom edge
          ElementPosition     #1431655764
          ArrangeMethod       #Horizontal, flush right
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DialogStartGrp
          ElementPosition     #1073741822
          HierarchyParent     #Dialog
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ElementGrp
          Width               #Column width
          ElementPosition     #1503238552
          HierarchyParent     #MainGrp
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #FileGrp
          Width               #Column width
          ElementPosition     #858993458
          HierarchyParent     #MainGrp
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GitOptionsGrp
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612734
          HierarchyParent     #ElementGrp
          FrameType           #Edged 3D
          Caption             #Git options
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #MainGrp
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #Main
          Style               #DialogContent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #OptionGrp
          Width               #Column width
          Height              #Column height
          ElementPosition     #1073741822
          HierarchyParent     #ElementGrp
          FrameType           #Edged 3D
          Caption             #@SYS22622
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RightButtonGrp
          ElementPosition     #1610612733
          HierarchyParent     #Dialog
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #Tab
          ElementPosition     #715827882
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Dialog
          ElementPosition     #1610612733
          HierarchyParent     #Tab
          Caption             #Query options
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Main
          ElementPosition     #1879048189
          HierarchyParent     #Tab
          Caption             #Git options
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #Browse
          Left                #Right edge
          HelpText            #@SYS74496
          ElementPosition     #1610612733
          HierarchyParent     #FileGrp
          Text                #@SYS28927
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    Filename path;
            #
            #    super();
            #
            #    path = WinAPI::browseForPath(element.hWnd()); // simpler, faster, lower level call
            #    //path = WinAPI::browseForFolderDialog(); // CLRInterop - nicer, but slower
            #
            #    element.updateBox(path);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #CheckForDeletedControl
          AutoDeclaration     #Yes
          Enabled             #No
          HelpText            #Check for objects that are present in repository, but missing in AOT and delete them from repository.
          ElementPosition     #1610612733
          HierarchyParent     #OptionGrp
          Label               #Check for deleted objects
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #ImportProjDefControl
          AutoDeclaration     #Yes
          Enabled             #No
          ElementPosition     #1073741822
          HierarchyParent     #OptionGrp
          Label               #Export project definition
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #BranchList
          AutoDeclaration     #Yes
          Width               #300
          ElementPosition     #1431655764
          HierarchyParent     #GitOptionsGrp
          Label               #Branch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #FilePath
          AutoDeclaration     #Yes
          Width               #Column width
          AlignControl        #No
          HelpText            #@SYS124357
          ElementPosition     #1073741822
          HierarchyParent     #FileGrp
          DisplayLength       #50
          Label               #Repository path
          AppendNew           #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    repositoryPath = filePath.getEditText();
            #
            #    element.updateBranchList();
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #Cancel
          ElementPosition     #1610612733
          HierarchyParent     #BottomButtonGrp
          Command             #264
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #Export
          ElementPosition     #1073741822
          HierarchyParent     #BottomButtonGrp
          Text                #@SYS5469
          DefaultButton       #Yes
          Command             #263
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FRM

; 
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #GitLog
  PROPERTIES
    Name                #GitLog
    Origin              #{DCBA1B0B-EDE1-4AC1-B5ED-57E53DE37DC6}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class FormRun extends ObjectRun
      #{
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #Change
          Table               #SysVersionControlTmpChange
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #ChangeItem
          Table               #SysVersionControlTmpItem
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #Change
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
    ChangeItem Change
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
    ENDPROPERTIES
    
    CONTAINER
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FRM

; 
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #SysVersionControlChangeContents
  PROPERTIES
  Name                #SysVersionControlChangeContents
  FormTemplate        #None
  InteractionClass    #
  AllowPreLoading     #Yes
  CreatedBy           #-AOS-
  CreationDate        #16/11/2012
  CreationTime        #16:25:15
  ChangedBy           #-AOS-
  ChangedDate         #12/09/2014
  ChangedTime         #18:21:48
  Origin              #{46FB46BF-5B8A-4CBD-9FDB-00B3FE7A50D7}
ENDPROPERTIES

  METHODS
    SOURCE #classDeclaration
      #public class FormRun extends ObjectRun
      #{
      #    SysVersionControlTmpChange change;
      #    SysVersionControlTmpItem contentsItem;
      #}
    ENDSOURCE
    SOURCE #fetchData
      #//AOSRunmode::Client
      #void fetchData(SysVersionControlChangeNumber _changeNumber, utcdatetime _changeDateTime, SysVersionControlItemComment _changeComments)
      #{
      #    SysVersionControlTmpItem contentsAddition;
      #
      #    startLengthyOperation();
      #
      #    //Remove already fetched data
      #    delete_from contentsItem;
      #
      #    contentsAddition = versioncontrol.getChangeNumberContents(_changeNumber, _changeDateTime, _changeComments);
      #
      #    while select contentsAddition
      #    {
      #        contentsItem.data(contentsAddition);
      #        contentsItem.insert();
      #    }
      #    contents_ds.executeQuery();
      #}
    ENDSOURCE
    SOURCE #init
      #public void init()
      #{
      #    SysVersionControlSystem sysVersionControlSystem = versioncontrol.parmSysVersionControlSystem();
      #
      #    if (SysVersionControlParameters::find().vcsEnabled == EnableDisable::Disable)
      #    {
      #        throw error("@SYS135983" + ' ' + strfmt("@SYS120745", "@SYS85914"), '', SysInfoAction_Formrun::newFormname(formstr(SysVersionControlParametersDev)));
      #    }
      #
      #    super();
      #
      #    aotImage.imageList(new ImageListAppl_Aot().imageList());
      #
      #    if (sysVersionControlSystem && !sysVersionControlSystem.supportChangeVersion())
      #    {
      #        overview_Version.visible(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #run
      #public void run()
      #{
      #    SysVersionControlTmpChange callerChangeItem;
      #    SysVersionControlTmpItem   callerItem;
      #    utcdatetime dateTimeChange;
      #
      #    // BP deviation documented:
      #    contents.setTmp();
      #    contents.checkRecord(false);
      #    contents.setTmpData(contentsItem);
      #
      #    if (element.args() &&
      #        element.args().record())
      #    {
      #        if (element.args().record() is SysVersionControlTmpChange)
      #        {
      #            callerChangeItem = element.args().record() as SysVersionControlTmpChange;
      #            dateTimeChange = DateTimeUtil::newDateTime(callerChangeItem.vcsDate, callerChangeItem.vcsTime);
      #            this.fetchData(callerChangeItem.ChangeNumber, dateTimeChange, callerChangeItem.Comment);
      #        }
      #        else if (element.args().record() is SysVersionControlTmpItem)
      #        {
      #            callerItem = element.args().record() as SysVersionControlTmpItem;
      #            dateTimeChange = DateTimeUtil::newDateTime(callerItem.vcsDate, callerItem.vcsTime);
      #            this.fetchData(callerItem.ChangeNumber, dateTimeChange, callerItem.Comment);
      #        }
      #    }
      #    super();
      #
      #    if (contents)
      #        buttonGroup.enabled(true);
      #    else
      #        buttonGroup.enabled(false);
      #
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #Contents
          Table               #SysVersionControlTmpItem
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #    ret = super();
          #
          #    element.lockWindowUpdate(true);
          #    if (contents)
          #    {
          #        buttonGroup.enabled(true);
          #        if (contents.getControllable() is SysTreeNode)
          #        {
          #            sysCompare.enabled(true);
          #            openNewWindow.enabled(true);
          #        }
          #        else
          #        {
          #            sysCompare.enabled(false);
          #            openNewWindow.enabled(false);
          #        }
          #
          #    }
          #    else
          #    {
          #        buttonGroup.enabled(false);
          #    }
          #
          #    element.lockWindowUpdate(false);
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #linkActive
          #public void linkActive()
          #{
          #    SysVersionControlTmpChange callerChange;
          #    SysVersionControlTmpItem callerItem;
          #    utcdatetime dateTimeChange;
          #
          #    super();
          #
          #    if (element.args() &&
          #        element.args().record())
          #    {
          #        if (element.args().record() is SysVersionControlTmpChange)
          #        {
          #            callerChange = element.args().record() as SysVersionControlTmpChange;
          #            dateTimeChange = DateTimeUtil::newDateTime(callerChange.vcsDate, callerChange.vcsTime);
          #            element.fetchData(callerChange.ChangeNumber, dateTimeChange, callerChange.Comment);
          #        }
          #        else if (element.args().record() is SysVersionControlTmpItem)
          #        {
          #            callerItem = element.args().record() as SysVersionControlTmpItem;
          #            dateTimeChange = DateTimeUtil::newDateTime(callerItem.vcsDate, callerItem.vcsTime);
          #            element.fetchData(callerItem.ChangeNumber, dateTimeChange, callerItem.Comment);
          #        }
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #@SYS14861
      TitleDatasource     #Contents
      WindowType          #Workspace
      SetCompany          #No
      ViewEditMode        #Edit
    ENDPROPERTIES
    
    CONTAINER
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroup
          AutoDeclaration     #Yes
          ElementPosition     #1879048190
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #CopyOfGrid
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          VerticalSpacing     #4
          ElementPosition     #1073741823
          HierarchyParent     #OverviewTab
          DataSource          #Contents
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Overview
          ElementPosition     #1610612734
          HierarchyParent     #CopyOfGrid
          BackgroundColor     #Window background
          DataSource          #Contents
          DataGroup           #ChangelistGrid
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #Tab
          Width               #Column width
          Height              #Column height
          HelpText            #@SYS30351
          ElementPosition     #1610612734
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #OverviewTab
          VerticalSpacing     #0
          ElementPosition     #1073741823
          HierarchyParent     #Tab
          Caption             #@SYS9039
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #OpenNewWindow
          AutoDeclaration     #Yes
          HelpText            #@SYS85924
          ElementPosition     #2013265918
          HierarchyParent     #ButtonGroup
          Text                #@SYS53405
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #    contents.openNewWindow();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #ViewFile
          HelpText            #@SYS85923
          ElementPosition     #2080374782
          HierarchyParent     #ButtonGroup
          Text                #@SYS85921
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #    contents.viewFile();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL INTEDIT
        PROPERTIES
          Name                #Overview_Version
          AutoDeclaration     #Yes
          ElementPosition     #1610612734
          HierarchyParent     #Overview
          DataSource          #Contents
          DataField           #Version
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #sysCompare
          AutoDeclaration     #Yes
          ElementPosition     #1879048190
          HierarchyParent     #ButtonGroup
          DataSource          #Contents
          MenuItemType        #Action
          MenuItemName        #sysCompare
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #SysVersionControlGet
          ElementPosition     #1073741823
          HierarchyParent     #ButtonGroup
          MultiSelect         #Yes
          MenuItemType        #Action
          MenuItemName        #SysVersionControlGet
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #SysVersionControlItemHistory
          ElementPosition     #1610612734
          HierarchyParent     #ButtonGroup
          MenuItemName        #SysVersionControlItemHistory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #AOTImage
          AutoDeclaration     #Yes
          AllowEdit           #No
          Width               #16
          Height              #16
          ElementPosition     #1073741823
          HierarchyParent     #CopyOfGrid
          BackStyle           #Transparent
          ShowLabel           #No
          DataSource          #Contents
          DataField           #ImageRes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FRM

; 
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #SysVersionControlChangesHistory
  PROPERTIES
  Name                #SysVersionControlChangesHistory
  FormTemplate        #None
  InteractionClass    #
  AllowPreLoading     #Yes
  CreatedBy           #-AOS-
  CreationDate        #16/11/2012
  CreationTime        #16:25:15
  ChangedBy           #-AOS-
  ChangedDate         #12/09/2014
  ChangedTime         #18:22:13
  Origin              #{C607CB28-1B65-480B-A343-44A6E67FAE00}
ENDPROPERTIES

  METHODS
    SOURCE #classDeclaration
      #public class FormRun extends ObjectRun
      #{
      #    SysVersionControlTmpChange change;
      #    SysVersionControlTmpItem contentsItem;
      #}
    ENDSOURCE
    SOURCE #fetchData
      #void fetchData()
      #{
      #    startLengthyOperation();
      #
      #    change = versioncontrol.getChangesHistory();
      #
      #    // BP deviation documented
      #    changes.setTmp();
      #    changes.checkRecord(false);
      #    changes.setTmpData(change);
      #}
    ENDSOURCE
    SOURCE #init
      #public void init()
      #{
      #    if (SysVersionControlParameters::find().vcsEnabled == EnableDisable::Disable)
      #    {
      #        throw error("@SYS135983" + ' ' + strfmt("@SYS120745", "@SYS85914"), '', SysInfoAction_Formrun::newFormname(formstr(SysVersionControlParametersDev)));
      #    }
      #
      #    super();
      #}
    ENDSOURCE
    SOURCE #run
      #public void run()
      #{
      #    this.fetchData();
      #
      #    // BP deviation documented
      #    contents.setTmp();
      #    contents.checkRecord(false);
      #    contents.setTmpData(contentsItem);
      #
      #    super();
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #Changes
          Table               #SysVersionControlTmpChange
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    super();
          #    this.query().dataSourceTable(tablenum(SysVersionControlTmpChange)).addSortField(fieldnum(SysVersionControlTmpChange, ChangeNumber),SortOrder::Descending);
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #Contents
          Table               #SysVersionControlTmpItem
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #Changes
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
    Contents Changes
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #@SYS69682
      TitleDatasource     #Changes
      WindowType          #Workspace
      SetCompany          #No
      ViewEditMode        #Edit
    ENDPROPERTIES
    
    CONTAINER
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroup
          ElementPosition     #1879048190
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #Grid
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          VerticalSpacing     #4
          ElementPosition     #1073741823
          HierarchyParent     #OverviewTab
          DataSource          #Changes
          DataGroup           #ChangesHistoryGrid
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ChangelistHeader
          ElementPosition     #1073741823
          HierarchyParent     #GeneralTab
          DataSource          #Changes
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
          DataGroup           #ChangelistHeader
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CommentGroup
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612734
          HierarchyParent     #GeneralTab
          DataSource          #Changes
          AlignChild          #No
          DataGroup           #Comment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #Tab
          Width               #Column width
          Height              #Column height
          HelpText            #@SYS35017
          ElementPosition     #1610612734
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #GeneralTab
          ElementPosition     #1610612734
          HierarchyParent     #Tab
          Caption             #@SYS2952
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #OverviewTab
          ElementPosition     #1073741823
          HierarchyParent     #Tab
          Caption             #@SYS9039
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #SysVersionControlChangeContents
          ElementPosition     #1073741823
          HierarchyParent     #ButtonGroup
          MenuItemName        #SysVersionControlChangeContents
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #SysVersionControlTmpItem_Comment
          Width               #Column width
          Height              #Column height
          ElementPosition     #1073741823
          HierarchyParent     #CommentGroup
          MultiLine           #Yes
          ShowLabel           #No
          DataSource          #Changes
          DataField           #Comment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FTM

; 
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #GitSysContextMenuExport
    Type: 3
    PROPERTIES
      Name                #GitSysContextMenuExport
      Label               #Export selected
      ObjectType          #Class
      Object              #GitSysContextMenuExport
      Parameters          #Type=AOT
      Origin              #{6AB921DF-AE99-4DBF-95E0-E928460F219B}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: FTM

; 
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #GitSysContextMenuExportQuery
    Type: 3
    PROPERTIES
      Name                #GitSysContextMenuExportQuery
      Label               #Export by query
      ObjectType          #Class
      Object              #GitSysContextMenuExport
      Parameters          #Type=Query
      Origin              #{BFF557A4-766F-4937-B44B-C26E796E56E4}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: FTM

; 
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #GitSysContextMenuImport
    Type: 3
    PROPERTIES
      Name                #GitSysContextMenuImport
      Label               #Import selected
      ObjectType          #Class
      Object              #GitSysContextMenuImport
      Origin              #{4017D42F-E952-4958-B0AC-C1669648567C}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: MNU

; 
; --------------------------------------------------------------------------------
  MNUVERSION 5
  
  MENU #SysContextMenu
    PROPERTIES
      Name                #SysContextMenu
      Label               #@SYS28637
      SecurityKey         #SysDevelopment
      Origin              #{100E0000-0000-1000-FB09-5DBF82A26477}
    ENDPROPERTIES
    
    MENUITEM
      PROPERTIES
        Name                #Compare existing code to proposed fix
        MenuItemType        #Action
        MenuItemName        #SysUpgradeConflictCodeRuleCompareUpgrade
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Auto-resolve source code rule conflict
        MenuItemType        #Action
        MenuItemName        #SysUpgradeConflictCodeRuleAutoResolve
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Compare altered code to original code
        MenuItemType        #Action
        MenuItemName        #SysUpgradeConflictCodeRuleCompareOrigina
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Revert auto-resolve source code rule conflict
        MenuItemType        #Action
        MenuItemName        #SysUpgradeConflictCodeRuleRevertResolve
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Mark as resolved
        MenuItemType        #Action
        MenuItemName        #SysUpgradeProjectMarkAsResolved
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Mark as unresolved
        MenuItemType        #Action
        MenuItemName        #SysUpgradeProjectMarkAsUnresolved
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Mark as resolved (including subnodes)
        MenuItemType        #Action
        MenuItemName        #SysUpgradeProjectMarkAsResolvedRecursive
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Mark as unresolved (including subnodes)
        MenuItemType        #Action
        MenuItemName        #SysUpgradeProjectMarkAsUnresolvedRecursi
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Rerun conflict detection
        MenuItemType        #Action
        MenuItemName        #SysUpgradeDetectConflictsRerun
      ENDPROPERTIES
      
    ENDMENUITEM
    SEPARATOR
    MENU #@SYS24666
      PROPERTIES
        Name                #@SYS24666
        Label               #@SYS24666
      ENDPROPERTIES
      
      MENUITEM
        PROPERTIES
          Name                #Used by
          MenuItemName        #XRefReferencesUsedBy
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Using (instant view)
          MenuItemType        #Action
          MenuItemName        #xRefUpdateTmpReferences
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Names
          MenuItemName        #XRefNames
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Using
          MenuItemName        #XRefReferencesUsing
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Update
          MenuItemType        #Action
          MenuItemName        #xRefUpdate
        ENDPROPERTIES
        
      ENDMENUITEM
    ENDMENU
    MENU #@SYS310448
      PROPERTIES
        Name                #SecTools
        Label               #@SYS310448
      ENDPROPERTIES
      
      MENUITEM
        PROPERTIES
          Name                #XRef analyser
          MenuItemName        #syssecanalysisaddIn
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Metadata analyser
          MenuItemName        #syssecanalysisaddInmetadataAnalyzer
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #View related security roles
          MenuItemName        #SysSecObjectsAnalyze
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #View related security objects
          MenuItemName        #SysSecObjectsInRole
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Apply changes
          MenuItemType        #Action
          MenuItemName        #SysSecSecurityApply
        ENDPROPERTIES
        
      ENDMENUITEM
    ENDMENU
    SEPARATOR
    MENUITEM
      PROPERTIES
        Name                #Table browser
        MenuItemName        #sysTableBrowser
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Auto-report
        MenuItemName        #SysTableForm
      ENDPROPERTIES
      
    ENDMENUITEM
    SEPARATOR
    MENUITEM
      PROPERTIES
        Name                #Reverse engineer
        MenuItemName        #SysVisioAddIn
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Extract XML documentation
        MenuItemType        #Output
        MenuItemName        #SysXmlDocumentationCreateFile
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Run tests
        MenuItemType        #Action
        MenuItemName        #SysTestToolbarOpen
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Type hierarchy browser
        MenuItemName        #SysTypeHierarchyBrowser
      ENDPROPERTIES
      
    ENDMENUITEM
    SEPARATOR
    MENUITEM
      PROPERTIES
        Name                #Compare
        MenuItemType        #Action
        MenuItemName        #sysCompare
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Compile forward
        MenuItemType        #Action
        MenuItemName        #sysCompileForward
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Impact Analysis
        MenuItemType        #Action
        MenuItemName        #SysImpactAnalysis
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Find and replace
        MenuItemType        #Action
        MenuItemName        #SysSourceReplaceText
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Syntactic renaming
        MenuItemType        #Action
        MenuItemName        #SysSourceReplaceSyntax
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Duplicates
        MenuItemName        #SysDictIndexShowDuplicates
      ENDPROPERTIES
      
    ENDMENUITEM
    MENU #@SYS16245
      PROPERTIES
        Name                #@SYS16245
        Label               #@SYS16245
        NeededAccessLevel   #NoAccess
      ENDPROPERTIES
      
      MENUITEM
        PROPERTIES
          Name                #Entire path
          MenuItemType        #Action
          MenuItemName        #SysTreeNodePathCopyToClipboard
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Name
          MenuItemType        #Action
          MenuItemName        #SysTreeNodeNameCopyToClipboard
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Copy to current layer
          MenuItemType        #Action
          MenuItemName        #systreenodecopyToCurrentLayer
        ENDPROPERTIES
        
      ENDMENUITEM
    ENDMENU
    MENUITEM
      PROPERTIES
        Name                #Check best practices
        MenuItemType        #Action
        MenuItemName        #SysBPCheck
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Check form style best practices
        MenuItemName        #SysBPStyleCheckAnalysis
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Source code title case update
        MenuItemType        #Action
        MenuItemName        #SysSourceNameWash
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Generate Axd query
        MenuItemType        #Action
        MenuItemName        #AxdGenerateAxdQuery
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #AIF Document Service Wizard
        MenuItemName        #AxdWizard
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Register service
        MenuItemType        #Action
        MenuItemName        #AifRegisterService
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Help properties
        MenuItemName        #HelpTopicID
      ENDPROPERTIES
      
    ENDMENUITEM
    SEPARATOR
    MENU #@SYS53405
      PROPERTIES
        Name                #SysContextMenuOpenNewWindow
        Label               #@SYS53405
        SetCompany          #Yes
      ENDPROPERTIES
      
      MENUITEM
        PROPERTIES
          Name                #Open application object window
          MenuItemType        #Action
          MenuItemName        #SysTreeNodeApplObjectOpenNewWindow
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Open parent in window
          MenuItemType        #Action
          MenuItemName        #SysTreeNodeParentOpenNewWindow
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Open new window
          MenuItemType        #Action
          MenuItemName        #SysTreeNodeOpenNewWindow
        ENDPROPERTIES
        
      ENDMENUITEM
      MENU #@SYS57839
        PROPERTIES
          Name                #@SYS57839
          Label               #@SYS57839
          NeededAccessLevel   #NoAccess
        ENDPROPERTIES
        
        MENUITEM
          PROPERTIES
            Name                #usp
            MenuItemType        #Action
            MenuItemName        #SysOpenOldUsp
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #usr
            MenuItemType        #Action
            MenuItemName        #SysOpenOldUsr
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #cup
            MenuItemType        #Action
            MenuItemName        #SysOpenOldCup
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #cus
            MenuItemType        #Action
            MenuItemName        #SysOpenOldCus
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #vap
            MenuItemType        #Action
            MenuItemName        #SysOpenOldVap
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #var
            MenuItemType        #Action
            MenuItemName        #SysOpenOldVar
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #isp
            MenuItemType        #Action
            MenuItemName        #SysOpenOldIsp
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #isv
            MenuItemType        #Action
            MenuItemName        #SysOpenOldIsv
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #slp
            MenuItemType        #Action
            MenuItemName        #SysOpenOldSlp
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #sln
            MenuItemType        #Action
            MenuItemName        #SysOpenOldSln
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #fpp
            MenuItemType        #Action
            MenuItemName        #SysOpenOldFpp
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #fpk
            MenuItemType        #Action
            MenuItemName        #SysOpenOldFpk
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #glp
            MenuItemType        #Action
            MenuItemName        #SysOpenOldGlp
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #gls
            MenuItemType        #Action
            MenuItemName        #SysOpenOldGls
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #syp
            MenuItemType        #Action
            MenuItemName        #SysOpenOldSyp
          ENDPROPERTIES
          
        ENDMENUITEM
        MENUITEM
          PROPERTIES
            Name                #sys
            MenuItemType        #Action
            MenuItemName        #SysOpenOldSys
          ENDPROPERTIES
          
        ENDMENUITEM
      ENDMENU
      MENUITEM
        PROPERTIES
          Name                #Open used table
          MenuItemType        #Action
          MenuItemName        #SysOpenNewWindowTable
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Open used table field group
          MenuItemType        #Action
          MenuItemName        #SysOpenNewWindowFieldGroup
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Open used Extended Data Type
          MenuItemType        #Action
          MenuItemName        #SysOpenNewWindowExtendedType
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Open used Enum
          MenuItemType        #Action
          MenuItemName        #SysOpenNewWindowEnum
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Open used class
          MenuItemType        #Action
          MenuItemName        #SysOpenNewWindowClass
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Open used form
          MenuItemType        #Action
          MenuItemName        #SysOpenNewWindowForm
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Open used report
          MenuItemType        #Action
          MenuItemName        #SysOpenNewWindowReport
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Open used menu item
          MenuItemType        #Action
          MenuItemName        #SysOpenNewWindowMenuItem
        ENDPROPERTIES
        
      ENDMENUITEM
    ENDMENU
    MENUITEM
      PROPERTIES
        Name                #Properties
        MenuItemType        #Action
        MenuItemName        #SysTreeNodeShowProperties
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Full CIL generation from X++
        MenuItemType        #Action
        MenuItemName        #SysXppILFullBuild
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Incremental CIL generation from X++
        MenuItemType        #Action
        MenuItemName        #SysXppILIncrementalBuild
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Approval wizard...
        MenuItemName        #WorkflowAOTWizardApproval
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Task wizard...
        MenuItemName        #WorkflowAOTWizardTask
      ENDPROPERTIES
      
    ENDMENUITEM
    MENUITEM
      PROPERTIES
        Name                #Workflow type wizard...
        MenuItemName        #WorkflowAOTWizardType
      ENDPROPERTIES
      
    ENDMENUITEM
    MENU #Git
      PROPERTIES
        Name                #Git
        Label               #Git
      ENDPROPERTIES
      
      MENUITEM
        PROPERTIES
          Name                #Export selected
          MenuItemType        #Action
          MenuItemName        #GitSysContextMenuExport
        ENDPROPERTIES
        
      ENDMENUITEM
      MENUITEM
        PROPERTIES
          Name                #Export by query
          MenuItemType        #Action
          MenuItemName        #GitSysContextMenuExportQuery
        ENDPROPERTIES
        
      ENDMENUITEM
      SEPARATOR
      MENUITEM
        PROPERTIES
          Name                #Import selected
          MenuItemType        #Action
          MenuItemName        #GitSysContextMenuImport
        ENDPROPERTIES
        
      ENDMENUITEM
    ENDMENU
  ENDMENU
  

***Element: JOB

; 
; --------------------------------------------------------------------------------
  JOBVERSION 1
  
  SOURCE #Job37
    #static void Job37(Args _args)
    #{
    #    TextBuffer   textBuffer = new TextBuffer();
    #
    #    textBuffer.fromFile(@'C:\Users\bmindaugas\Ax2Git\Classes\Git.xpo', FileEncoding::UTF8);
    #    textBuffer.regularExpressions(true);
    #
    #    //print 'numLines: ', textBuffer.numLines();
    #
    #    print 'find(): ', textBuffer.find('\n.');
    #    print 'matchPos(): ', textBuffer.matchPos();
    #    print 'matchLen(): ', textBuffer.matchLen();
    #    print textBuffer.subStr(textBuffer.matchPos(), textBuffer.matchLen());
    #    pause;
    #}
  ENDSOURCE
  PROPERTIES
    Origin              #{5469FC75-1A66-4339-B2F6-F8C13E1C83F1}
  ENDPROPERTIES
  

***Element: JOB

; 
; --------------------------------------------------------------------------------
  JOBVERSION 1
  
  SOURCE #Job38
    #static void Job38(Args _args)
    #{
    #    #define.FileName(@'C:\Users\bmindaugas\esn.git\Classes\AppAot.xpo')
    #
    #    System.Text.UTF8Encoding    encoding = new System.Text.UTF8Encoding(false);
    #    System.IO.StreamReader      streamReader;
    #    System.IO.StreamWriter      streamWriter;
    #    System.Text.RegularExpressions.Regex regex;
    #    System.Text.RegularExpressions.Match regexMatch;
    #
    #    str                         text;
    #    str                         regExPattern;
    #
    #    streamReader = new System.IO.StreamReader(#FileName, encoding);
    #    text          = streamReader.ReadToEnd();
    #    streamReader.Close();
    #
    #    // works, but eats too much regExPattern = '.*PROPERTIES(\r\n|.)*ENDPROPERTIES\r\n';
    #    regExPattern = '.*PROPERTIES(\r\n|.)*ENDPROPERTIES';
    #    regex = new System.Text.RegularExpressions.Regex(regExPattern, System.Text.RegularExpressions.RegexOptions::Multiline);
    #    regexMatch = regex.Match(text);
    #    if (regexMatch.get_Success())
    #    {
    #        print 'Index ', regexMatch.get_Index();
    #        print 'Length ', regexMatch.get_Length();
    #        print 'Value ', regexMatch.get_Value();
    #
    #        pause;
    #    }
    #
    #    text = System.Text.RegularExpressions.Regex::Replace(text, regExPattern, 'NPROP\r\nXPROP');
    #
    #
    #    //streamWriter = new System.IO.StreamWriter(#FileName, false, encoding);
    #    //streamWriter.Write(text);
    #    //streamWriter.Close();
    #
    #
    #}
  ENDSOURCE
  PROPERTIES
    Origin              #{623887C0-446F-4636-BB85-120C7F476ECF}
  ENDPROPERTIES
  

***Element: JOB

; 
; --------------------------------------------------------------------------------
  JOBVERSION 1
  
  SOURCE #Test_getLog
    #static void Test_getLog(Args _args)
    #{
    #    #define.Repo(@'C:\Users\bmindaugas\esn-old.git')
    #    #define.File(@'Classes\ESNInterfaceExportSalesInventOrder.xpo')
    #
    #    container   branches = Git::getBranches(#Repo, true);
    #    container   log      = Git::getLog(#Repo, ''); //#File);
    #    int         i;
    #
    #    for (i=1; i<=conLen(log); i++)
    #    {
    #        info(conPeek(log, i));
    #    }
    #}
  ENDSOURCE
  PROPERTIES
    Origin              #{6B85ABA4-F8FB-437B-921A-4D931A7839DB}
  ENDPROPERTIES
  

***Element: JOB

; 
; --------------------------------------------------------------------------------
  JOBVERSION 1
  
  SOURCE #treeNode_AOTLayers_benchmark
    #static void treeNode_AOTLayers_benchmark(Args _args)
    #{
    #    #define.nodePath(@'\Data dictionary\Tables\CustTable')
    #    //#define.nodePath(@'\Data dictionary\Views\ESNSalesAnalysisSRS')
    #    TreeNode        treeNode;
    #    TreeNode        treeNodeInLayer;
    #    SetEnumerator   setEnumerator;
    #    UtilEntryLevel  layer;
    #
    #    SysModelLayer       sysModelLayer;
    #    SysModelElement     sysModelElement;
    #    SysModelElement     sysModelElementChild;
    #    SysModelElementData sysModelElementData;
    #    SysModelElementType sysModelElementType;
    #
    #    System.Diagnostics.Stopwatch stopWatch = new System.Diagnostics.Stopwatch();
    #    TreeNodePath        treeNodePathFull;
    #    TreeNodePath        treeNodePath;
    #    TreeNodeName        treeNodeName;
    #    int                 lastSlashPos;
    #
    #
    #    treeNode = TreeNode::findNode(#nodePath);
    #
    #    // Incomplete result in some cases (e.g. Tables):
    #    stopWatch.Start();
    #    info('-------------------------------------');
    #    info('treeNode.AOTLayers():');
    #    setEnumerator = treeNode.AOTLayers().getEnumerator();
    #    while (setEnumerator.moveNext())
    #    {
    #        layer = setEnumerator.current();
    #        info(strFmt('%1', layer));
    #    }
    #    stopWatch.Stop();
    #    info(strFmt('Elapsed time: %1', CLRInterop::getAnyTypeForObject(stopWatch.get_ElapsedMilliseconds())));
    #
    #    info('-------------------------------------');
    #    info('treeNode.getNodeInLayer():');
    #    stopWatch.Reset();
    #    stopWatch.Start();
    #    for (layer=UtilEntryLevel::sys; layer<=UtilEntryLevel::usp; layer++)
    #    {
    #        treeNodeInLayer = treeNode.getNodeInLayer(layer);
    #        if (treeNodeInLayer)
    #        {
    #            info(strFmt('%1', layer));
    #            treeNodeInLayer.treeNodeRelease();
    #            treeNodeInLayer = null;
    #        }
    #    }
    #    stopWatch.Stop();
    #    info(strFmt('Elapsed time: %1', CLRInterop::getAnyTypeForObject(stopWatch.get_ElapsedMilliseconds())));
    #
    #    info('-------------------------------------');
    #    info('sysModelElement 2 queries:');
    #    stopWatch.Reset();
    #    stopWatch.Start();
    #
    #    treeNodePathFull = treeNode.treeNodePath();
    #    lastSlashPos = strScan(treeNodePathFull, @'\', strLen(treeNodePathFull), -strLen(treeNodePathFull));
    #    treeNodePath = subStr(treeNodePathFull, 1, lastSlashPos-1);
    #    treeNodeName = subStr(treeNodePathFull, lastSlashPos+1, strLen(treeNodePathFull));
    #
    #    while select sysModelElement
    #        where sysModelElement.Name == treeNodeName
    #    join sysModelElementType
    #        where sysModelElementType.RecId == sysModelElement.ElementType
    #           && sysModelElementType.TreeNodeName == treeNodePath
    #    join sysModelElementData
    #        where sysModelElementData.ModelElement == sysModelElement.RecId
    #    join sysModelLayer
    #        group by Layer
    #        where sysModelLayer.RecId == sysModelElementData.Layer
    #    {
    #        info(strFmt('%1', sysModelLayer.Layer));
    #    }
    #    info('---plus---');
    #    while select sysModelElement
    #        where sysModelElement.Name == treeNodeName
    #    join sysModelElementType
    #        where sysModelElementType.RecId == sysModelElement.ElementType
    #           && sysModelElementType.TreeNodeName == treeNodePath
    #    join sysModelElementChild
    #        where (sysModelElementChild.RootModelElement && sysModelElementChild.RootModelElement == sysModelElement.RecId) // any sub-elements
    #    join sysModelElementData
    #        where sysModelElementData.ModelElement == sysModelElementChild.RecId
    #    join sysModelLayer
    #        group by Layer
    #        where sysModelLayer.RecId == sysModelElementData.Layer
    #    {
    #        info(strFmt('%1', sysModelLayer.Layer));
    #    }
    #    stopWatch.Stop();
    #    info(strFmt('Elapsed time: %1', CLRInterop::getAnyTypeForObject(stopWatch.get_ElapsedMilliseconds())));
    #
    #
    #    info('-------------------------------------');
    #    info('sysModelElement 1 complex query:');
    #    stopWatch.Reset();
    #    stopWatch.Start();
    #
    #    treeNodePathFull = treeNode.treeNodePath();
    #    lastSlashPos = strScan(treeNodePathFull, @'\', strLen(treeNodePathFull), -strLen(treeNodePathFull));
    #    treeNodePath = subStr(treeNodePathFull, 1, lastSlashPos-1);
    #    treeNodeName = subStr(treeNodePathFull, lastSlashPos+1, strLen(treeNodePathFull));
    #
    #    while select sysModelElement
    #        where sysModelElement.Name == treeNodeName
    #    join sysModelElementType
    #        where sysModelElementType.RecId == sysModelElement.ElementType
    #           && sysModelElementType.TreeNodeName == treeNodePath
    #    join sysModelElementChild
    #        where ( sysModelElementChild.RootModelElement && sysModelElementChild.RootModelElement == sysModelElement.RecId) // any sub-elements
    #           || (!sysModelElementChild.RootModelElement && sysModelElementChild.RecId == sysModelElement.RecId) // or the element itself
    #    join sysModelElementData
    #        where sysModelElementData.ModelElement == sysModelElementChild.RecId
    #    join sysModelLayer
    #        group by Layer
    #        where sysModelLayer.RecId == sysModelElementData.Layer
    #    {
    #        info(strFmt('%1', sysModelLayer.Layer));
    #    }
    #    stopWatch.Stop();
    #    info(strFmt('Elapsed time: %1', CLRInterop::getAnyTypeForObject(stopWatch.get_ElapsedMilliseconds())));
    #
    #    info('-------------------------------------');
    #    info('sysModelElement again 2 queries:');
    #    stopWatch.Reset();
    #    stopWatch.Start();
    #
    #    treeNodePathFull = treeNode.treeNodePath();
    #    lastSlashPos = strScan(treeNodePathFull, @'\', strLen(treeNodePathFull), -strLen(treeNodePathFull));
    #    treeNodePath = subStr(treeNodePathFull, 1, lastSlashPos-1);
    #    treeNodeName = subStr(treeNodePathFull, lastSlashPos+1, strLen(treeNodePathFull));
    #
    #    select firstOnly1 sysModelElement
    #        where sysModelElement.Name == treeNodeName
    #    join sysModelElementType
    #        where sysModelElementType.RecId == sysModelElement.ElementType
    #           && sysModelElementType.TreeNodeName == treeNodePath;
    #
    #    while select sysModelElementChild
    #        where ( sysModelElementChild.RootModelElement && sysModelElementChild.RootModelElement == sysModelElement.RecId) // any sub-elements
    #           || (!sysModelElementChild.RootModelElement && sysModelElementChild.RecId == sysModelElement.RecId)            // or the element itself
    #    join sysModelElementData
    #        where sysModelElementData.ModelElement == sysModelElementChild.RecId
    #    join sysModelLayer
    #        group by Layer
    #        where sysModelLayer.RecId == sysModelElementData.Layer
    #    {
    #        info(strFmt('%1', sysModelLayer.Layer));
    #    }
    #    stopWatch.Stop();
    #    info(strFmt('Elapsed time: %1', CLRInterop::getAnyTypeForObject(stopWatch.get_ElapsedMilliseconds())));
    #
    #}
  ENDSOURCE
  PROPERTIES
    Origin              #{1D9AF067-02E5-4B54-ACD3-22EABAC1A155}
  ENDPROPERTIES
  

***Element: PRN

; 
; --------------------------------------------------------------------------------
  PROJECTVERSION 2
  
  PROJECT #Git
  SHARED
  PROPERTIES
    Name                #Git
    Origin              #{5C23D995-045C-4FCD-A2DD-3B283E7AD36F}
  ENDPROPERTIES
  
    PROJECTCLASS ProjectNode
    GROUP #BaseEnums
      PROPERTIES
        Name                #BaseEnums
        ProjectGroupType    #BaseEnums
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 40
        NODETYPE 209
        NAME #GitExportLayers
      ENDNODE
      ENDGROUP
      
    GROUP #Forms
      PROPERTIES
        Name                #Forms
        ProjectGroupType    #Forms
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        NODETYPE 201
        NAME #GitExportDialog
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        NODETYPE 201
        NAME #GitImportDialog
      ENDNODE
      ENDGROUP
      
    GROUP #Classes
      PROPERTIES
        Name                #Classes
        ProjectGroupType    #Classes
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        NODETYPE 329
        NAME #Git
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        NODETYPE 329
        NAME #GitExport
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        NODETYPE 329
        NAME #GitExport_Query
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        NODETYPE 329
        NAME #GitImport
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        NODETYPE 329
        NAME #GitSysContextMenuExport
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        NODETYPE 329
        NAME #GitSysContextMenuImport
      ENDNODE
      ENDGROUP
      
    GROUP #Menu Items
      PROPERTIES
        Name                #Menu Items
        ProjectGroupType    #MenuItems
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      GROUP #Action
        PROPERTIES
          Name                #Action
          ProjectGroupType    #Action
          GroupMask           #
          PreventEditProperties #No
        ENDPROPERTIES
        
        BEGINNODE
          FILETYPE 0
          UTILTYPE 3
          NODETYPE 296
          NAME #GitSysContextMenuExport
        ENDNODE
        BEGINNODE
          FILETYPE 0
          UTILTYPE 3
          NODETYPE 296
          NAME #GitSysContextMenuExportQuery
        ENDNODE
        BEGINNODE
          FILETYPE 0
          UTILTYPE 3
          NODETYPE 296
          NAME #GitSysContextMenuImport
        ENDNODE
        ENDGROUP
        
      ENDGROUP
      
    GROUP #Menus
      PROPERTIES
        Name                #Menus
        ProjectGroupType    #Menus
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 16
        NODETYPE 205
        NAME #SysContextMenu
      ENDNODE
      ENDGROUP
      
    GROUP #Jobs
      PROPERTIES
        Name                #Jobs
        ProjectGroupType    #Jobs
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 5
        NODETYPE 215
        NAME #treeNode_AOTLayers_benchmark
      ENDNODE
      ENDGROUP
      
  ENDPROJECT
  


***Element: END
